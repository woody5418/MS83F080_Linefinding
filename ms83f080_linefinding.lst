

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Mar 22 18:25:32 2019

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F685
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_System_init
    43                           	FNCALL	_main,_GPIO_Init
    44                           	FNCALL	_main,_ADC_Init
    45                           	FNCALL	_main,_EEPROM_Init
    46                           	FNCALL	_main,_LED_Study_End
    47                           	FNCALL	_main,_Read_EEPROM_u16
    48                           	FNCALL	_main,_ExchChannel
    49                           	FNCALL	_main,_GetADCValue
    50                           	FNCALL	_main,_delay_ms
    51                           	FNCALL	_main,_isKeyPressed
    52                           	FNCALL	_main,_Write_EEPROM_u16
    53                           	FNCALL	_LED_Study_End,_delay_ms
    54                           	FNCALL	_ADC_Init,_delay_ms
    55                           	FNCALL	_Write_EEPROM_u16,_Write_EEPROM_u8
    56                           	FNCALL	_Read_EEPROM_u16,_Read_EEPROM_u8
    57                           	FNCALL	_EEPROM_Init,_Write_EEPROM_u8
    58                           	FNROOT	_main
    59                           	FNCALL	intlevel1,_ISR
    60                           	global	intlevel1
    61                           	FNROOT	intlevel1
    62                           	global	_ADC1_INPUT
    63                           	global	_ADC5_ADCOUT
    64                           	global	_ADC_STUDY
    65                           	global	_i
    66                           	global	_j
    67                           	global	_PSTRCON
    68                           psect	text544,local,class=CODE,delta=2
    69                           global __ptext544
    70  0000                     __ptext544:
    71  019D                     _PSTRCON	set	413
    72                           	DABS	1,413,1	;_PSTRCON
    73                           
    74                           	global	_SRCON
    75  019E                     _SRCON	set	414
    76                           	DABS	1,414,1	;_SRCON
    77                           
    78                           	global	_C1SEN
    79  0CF5                     _C1SEN	set	3317
    80                           	DABS	1,414,1	;_C1SEN
    81                           
    82                           	global	_C2REN
    83  0CF4                     _C2REN	set	3316
    84                           	DABS	1,414,1	;_C2REN
    85                           
    86                           	global	_EEPGD
    87  0C67                     _EEPGD	set	3175
    88                           	DABS	1,396,1	;_EEPGD
    89                           
    90                           	global	_PULSR
    91  0CF2                     _PULSR	set	3314
    92                           	DABS	1,414,1	;_PULSR
    93                           
    94                           	global	_PULSS
    95  0CF3                     _PULSS	set	3315
    96                           	DABS	1,414,1	;_PULSS
    97                           
    98                           	global	_SR0
    99  0CF6                     _SR0	set	3318
   100                           	DABS	1,414,1	;_SR0
   101                           
   102                           	global	_SR1
   103  0CF7                     _SR1	set	3319
   104                           	DABS	1,414,1	;_SR1
   105                           
   106                           	global	_STRA
   107  0CE8                     _STRA	set	3304
   108                           	DABS	1,413,1	;_STRA
   109                           
   110                           	global	_STRB
   111  0CE9                     _STRB	set	3305
   112                           	DABS	1,413,1	;_STRB
   113                           
   114                           	global	_STRC
   115  0CEA                     _STRC	set	3306
   116                           	DABS	1,413,1	;_STRC
   117                           
   118                           	global	_STRD
   119  0CEB                     _STRD	set	3307
   120                           	DABS	1,413,1	;_STRD
   121                           
   122                           	global	_STRSYNC
   123  0CEC                     _STRSYNC	set	3308
   124                           	DABS	1,413,1	;_STRSYNC
   125                           
   126                           	global	_WREN
   127  0C62                     _WREN	set	3170
   128                           	DABS	1,396,1	;_WREN
   129                           
   130                           	global	_ADCON0
   131  001F                     _ADCON0	set	31
   132                           	global	_ADRESH
   133  001E                     _ADRESH	set	30
   134                           	global	_TMR2
   135  0011                     _TMR2	set	17
   136                           	global	_WDTCON
   137  0018                     _WDTCON	set	24
   138                           	global	_ADFM
   139  00FF                     _ADFM	set	255
   140                           	global	_ADON
   141  00F8                     _ADON	set	248
   142                           	global	_CARRY
   143  0018                     _CARRY	set	24
   144                           	global	_CHS0
   145  00FA                     _CHS0	set	250
   146                           	global	_CHS1
   147  00FB                     _CHS1	set	251
   148                           	global	_CHS2
   149  00FC                     _CHS2	set	252
   150                           	global	_CM0
   151  00C8                     _CM0	set	200
   152                           	global	_CM1
   153  00C9                     _CM1	set	201
   154                           	global	_CM2
   155  00CA                     _CM2	set	202
   156                           	global	_EEIF
   157  0067                     _EEIF	set	103
   158                           	global	_GIE
   159  005F                     _GIE	set	95
   160                           	global	_GO_DONE
   161  00F9                     _GO_DONE	set	249
   162                           	global	_PA0
   163  0028                     _PA0	set	40
   164                           	global	_PA6
   165  002E                     _PA6	set	46
   166                           	global	_PC2
   167  003A                     _PC2	set	58
   168                           	global	_PEIE
   169  005E                     _PEIE	set	94
   170                           	global	_T2CKPS0
   171  0090                     _T2CKPS0	set	144
   172                           	global	_T2CKPS1
   173  0091                     _T2CKPS1	set	145
   174                           	global	_TMR2IF
   175  0061                     _TMR2IF	set	97
   176                           	global	_TMR2ON
   177  0092                     _TMR2ON	set	146
   178                           	global	_TOUTPS0
   179  0093                     _TOUTPS0	set	147
   180                           	global	_TOUTPS1
   181  0094                     _TOUTPS1	set	148
   182                           	global	_TOUTPS2
   183  0095                     _TOUTPS2	set	149
   184                           	global	_TOUTPS3
   185  0096                     _TOUTPS3	set	150
   186                           	global	_VCFG0
   187  00FD                     _VCFG0	set	253
   188                           	global	_ADRESL
   189  009E                     _ADRESL	set	158
   190                           	global	_EEADR
   191  009B                     _EEADR	set	155
   192                           	global	_EECON1
   193  009C                     _EECON1	set	156
   194                           	global	_EECON2
   195  009D                     _EECON2	set	157
   196                           	global	_EEDAT
   197  009A                     _EEDAT	set	154
   198                           	global	_EEDATA
   199  009A                     _EEDATA	set	154
   200                           	global	_OPTION
   201  0081                     _OPTION	set	129
   202                           	global	_OSCCON
   203  008F                     _OSCCON	set	143
   204                           	global	_PR2
   205  0092                     _PR2	set	146
   206                           	global	_ADCS0
   207  04FC                     _ADCS0	set	1276
   208                           	global	_ADCS1
   209  04FD                     _ADCS1	set	1277
   210                           	global	_ADCS2
   211  04FE                     _ADCS2	set	1278
   212                           	global	_ANSEL0
   213  0488                     _ANSEL0	set	1160
   214                           	global	_ANSEL1
   215  0489                     _ANSEL1	set	1161
   216                           	global	_ANSEL2
   217  048A                     _ANSEL2	set	1162
   218                           	global	_ANSEL3
   219  048B                     _ANSEL3	set	1163
   220                           	global	_ANSEL4
   221  048C                     _ANSEL4	set	1164
   222                           	global	_ANSEL5
   223  048D                     _ANSEL5	set	1165
   224                           	global	_ANSEL6
   225  048E                     _ANSEL6	set	1166
   226                           	global	_ANSEL7
   227  048F                     _ANSEL7	set	1167
   228                           	global	_DIVS
   229  04FF                     _DIVS	set	1279
   230                           	global	_RD
   231  04E0                     _RD	set	1248
   232                           	global	_TMR2IE
   233  0461                     _TMR2IE	set	1121
   234                           	global	_TRISA0
   235  0428                     _TRISA0	set	1064
   236                           	global	_TRISA1
   237  0429                     _TRISA1	set	1065
   238                           	global	_TRISA2
   239  042A                     _TRISA2	set	1066
   240                           	global	_TRISA3
   241  042B                     _TRISA3	set	1067
   242                           	global	_TRISA4
   243  042C                     _TRISA4	set	1068
   244                           	global	_TRISA5
   245  042D                     _TRISA5	set	1069
   246                           	global	_TRISA6
   247  042E                     _TRISA6	set	1070
   248                           	global	_TRISA7
   249  042F                     _TRISA7	set	1071
   250                           	global	_TRISC0
   251  0438                     _TRISC0	set	1080
   252                           	global	_TRISC1
   253  0439                     _TRISC1	set	1081
   254                           	global	_TRISC2
   255  043A                     _TRISC2	set	1082
   256                           	global	_TRISC3
   257  043B                     _TRISC3	set	1083
   258                           	global	_TRISC4
   259  043C                     _TRISC4	set	1084
   260                           	global	_TRISC5
   261  043D                     _TRISC5	set	1085
   262                           	global	_WPDA4
   263  044C                     _WPDA4	set	1100
   264                           	global	_WPDC1
   265  044B                     _WPDC1	set	1099
   266                           	global	_WPDC2
   267  044A                     _WPDC2	set	1098
   268                           	global	_WPDC3
   269  0449                     _WPDC3	set	1097
   270                           	global	_WPUA0
   271  04A8                     _WPUA0	set	1192
   272                           	global	_WPUA1
   273  04A9                     _WPUA1	set	1193
   274                           	global	_WPUA2
   275  04AA                     _WPUA2	set	1194
   276                           	global	_WPUA3
   277  04AB                     _WPUA3	set	1195
   278                           	global	_WPUA4
   279  04AC                     _WPUA4	set	1196
   280                           	global	_WPUA5
   281  04AD                     _WPUA5	set	1197
   282                           	global	_WPUA6
   283  04AE                     _WPUA6	set	1198
   284                           	global	_WPUA7
   285  04AF                     _WPUA7	set	1199
   286                           	global	_WPUC0
   287  0440                     _WPUC0	set	1088
   288                           	global	_WPUC1
   289  0441                     _WPUC1	set	1089
   290                           	global	_WPUC2
   291  0442                     _WPUC2	set	1090
   292                           	global	_WPUC3
   293  0443                     _WPUC3	set	1091
   294                           	global	_WPUC4
   295  0444                     _WPUC4	set	1092
   296                           	global	_WPUC5
   297  0445                     _WPUC5	set	1093
   298                           	global	_WR
   299  04E8                     _WR	set	1256
   300                           	file	"ms83f080_linefinding.as"
   301                           	line	#
   302                           psect cinit,class=CODE,delta=2
   303                           global start_initialization
   304  023A                     start_initialization:
   305                           
   306                           psect	bssCOMMON,class=COMMON,space=1
   307                           global __pbssCOMMON
   308  0076                     __pbssCOMMON:
   309  0076                     _ADC_STUDY:
   310  0076                            ds      2
   311                           
   312  0078                     _i:
   313  0078                            ds      1
   314                           
   315  0079                     _j:
   316  0079                            ds      1
   317                           
   318                           psect	bssBANK0,class=BANK0,space=1
   319                           global __pbssBANK0
   320  002A                     __pbssBANK0:
   321  002A                     _ADC1_INPUT:
   322  002A                            ds      2
   323                           
   324  002C                     _ADC5_ADCOUT:
   325  002C                            ds      2
   326                           
   327                           ; Clear objects allocated to COMMON
   328                           psect cinit,class=CODE,delta=2
   329  023A  01F6               	clrf	((__pbssCOMMON)+0)&07Fh
   330  023B  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
   331  023C  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
   332  023D  01F9               	clrf	((__pbssCOMMON)+3)&07Fh
   333                           ; Clear objects allocated to BANK0
   334                           psect cinit,class=CODE,delta=2
   335  023E  01AA               	clrf	((__pbssBANK0)+0)&07Fh
   336  023F  01AB               	clrf	((__pbssBANK0)+1)&07Fh
   337  0240  01AC               	clrf	((__pbssBANK0)+2)&07Fh
   338  0241  01AD               	clrf	((__pbssBANK0)+3)&07Fh
   339                           psect cinit,class=CODE,delta=2
   340                           global end_of_initialization
   341                           
   342                           ;End of C runtime variable initialization code
   343                           
   344  0242                     end_of_initialization:
   345  0242  0183               clrf status
   346  0243  2811               ljmp _main	;jump to C main() function
   347                           psect	cstackCOMMON,class=COMMON,space=1
   348                           global __pcstackCOMMON
   349  0070                     __pcstackCOMMON:
   350                           	global	?_System_init
   351  0070                     ?_System_init:	; 0 bytes @ 0x0
   352                           	global	?_GPIO_Init
   353  0070                     ?_GPIO_Init:	; 0 bytes @ 0x0
   354                           	global	?_ADC_Init
   355  0070                     ?_ADC_Init:	; 0 bytes @ 0x0
   356                           	global	?_EEPROM_Init
   357  0070                     ?_EEPROM_Init:	; 0 bytes @ 0x0
   358                           	global	?_LED_Study_End
   359  0070                     ?_LED_Study_End:	; 0 bytes @ 0x0
   360                           	global	?_ExchChannel
   361  0070                     ?_ExchChannel:	; 0 bytes @ 0x0
   362                           	global	?_main
   363  0070                     ?_main:	; 0 bytes @ 0x0
   364                           	global	?_ISR
   365  0070                     ?_ISR:	; 0 bytes @ 0x0
   366                           	global	??_ISR
   367  0070                     ??_ISR:	; 0 bytes @ 0x0
   368                           	global	?_isKeyPressed
   369  0070                     ?_isKeyPressed:	; 1 bytes @ 0x0
   370                           	global	?_Read_EEPROM_u8
   371  0070                     ?_Read_EEPROM_u8:	; 1 bytes @ 0x0
   372  0070                     	ds	4
   373                           	global	??_System_init
   374  0074                     ??_System_init:	; 0 bytes @ 0x4
   375                           	global	??_GPIO_Init
   376  0074                     ??_GPIO_Init:	; 0 bytes @ 0x4
   377                           	global	??_ExchChannel
   378  0074                     ??_ExchChannel:	; 0 bytes @ 0x4
   379                           	global	?_delay_ms
   380  0074                     ?_delay_ms:	; 0 bytes @ 0x4
   381                           	global	??_isKeyPressed
   382  0074                     ??_isKeyPressed:	; 0 bytes @ 0x4
   383                           	global	?_Write_EEPROM_u8
   384  0074                     ?_Write_EEPROM_u8:	; 0 bytes @ 0x4
   385                           	global	??_Read_EEPROM_u8
   386  0074                     ??_Read_EEPROM_u8:	; 0 bytes @ 0x4
   387                           	global	?_GetADCValue
   388  0074                     ?_GetADCValue:	; 2 bytes @ 0x4
   389                           	global	Write_EEPROM_u8@EEDatas
   390  0074                     Write_EEPROM_u8@EEDatas:	; 1 bytes @ 0x4
   391                           	global	delay_ms@x
   392  0074                     delay_ms@x:	; 2 bytes @ 0x4
   393  0074                     	ds	1
   394                           	global	??_Write_EEPROM_u8
   395  0075                     ??_Write_EEPROM_u8:	; 0 bytes @ 0x5
   396                           	global	Write_EEPROM_u8@EEAddress
   397  0075                     Write_EEPROM_u8@EEAddress:	; 1 bytes @ 0x5
   398  0075                     	ds	1
   399                           	global	??_ADC_Init
   400  0076                     ??_ADC_Init:	; 0 bytes @ 0x6
   401                           	global	??_LED_Study_End
   402  0076                     ??_LED_Study_End:	; 0 bytes @ 0x6
   403                           psect	cstackBANK0,class=BANK0,space=1
   404                           global __pcstackBANK0
   405  0020                     __pcstackBANK0:
   406                           	global	??_EEPROM_Init
   407  0020                     ??_EEPROM_Init:	; 0 bytes @ 0x0
   408                           	global	??_GetADCValue
   409  0020                     ??_GetADCValue:	; 0 bytes @ 0x0
   410                           	global	??_delay_ms
   411  0020                     ??_delay_ms:	; 0 bytes @ 0x0
   412                           	global	?_Write_EEPROM_u16
   413  0020                     ?_Write_EEPROM_u16:	; 0 bytes @ 0x0
   414                           	global	ExchChannel@ch_temp
   415  0020                     ExchChannel@ch_temp:	; 1 bytes @ 0x0
   416                           	global	Read_EEPROM_u8@EEAddress
   417  0020                     Read_EEPROM_u8@EEAddress:	; 1 bytes @ 0x0
   418                           	global	Write_EEPROM_u16@EEDatas
   419  0020                     Write_EEPROM_u16@EEDatas:	; 2 bytes @ 0x0
   420  0020                     	ds	1
   421                           	global	ExchChannel@adc_ch_temp
   422  0021                     ExchChannel@adc_ch_temp:	; 1 bytes @ 0x1
   423                           	global	Read_EEPROM_u8@EepromData
   424  0021                     Read_EEPROM_u8@EepromData:	; 1 bytes @ 0x1
   425  0021                     	ds	1
   426                           	global	??_Write_EEPROM_u16
   427  0022                     ??_Write_EEPROM_u16:	; 0 bytes @ 0x2
   428                           	global	?_Read_EEPROM_u16
   429  0022                     ?_Read_EEPROM_u16:	; 2 bytes @ 0x2
   430                           	global	GetADCValue@ADC_num
   431  0022                     GetADCValue@ADC_num:	; 2 bytes @ 0x2
   432                           	global	delay_ms@i
   433  0022                     delay_ms@i:	; 2 bytes @ 0x2
   434  0022                     	ds	1
   435                           	global	Write_EEPROM_u16@EEAddress
   436  0023                     Write_EEPROM_u16@EEAddress:	; 1 bytes @ 0x3
   437  0023                     	ds	1
   438                           	global	??_Read_EEPROM_u16
   439  0024                     ??_Read_EEPROM_u16:	; 0 bytes @ 0x4
   440  0024                     	ds	2
   441                           	global	Read_EEPROM_u16@EEAddress
   442  0026                     Read_EEPROM_u16@EEAddress:	; 1 bytes @ 0x6
   443  0026                     	ds	1
   444                           	global	Read_EEPROM_u16@EepromData
   445  0027                     Read_EEPROM_u16@EepromData:	; 2 bytes @ 0x7
   446  0027                     	ds	2
   447                           	global	??_main
   448  0029                     ??_main:	; 0 bytes @ 0x9
   449  0029                     	ds	1
   450 ;;Data sizes: Strings 0, constant 0, data 0, bss 8, persistent 0 stack 0
   451 ;;Auto spaces:   Size  Autos    Used
   452 ;; COMMON          14      6      10
   453 ;; BANK0           80     10      14
   454 ;; BANK1           32      0       0
   455                           
   456 ;;
   457 ;; Pointer list with targets:
   458                           
   459 ;; ?_Read_EEPROM_u16	unsigned int  size(1) Largest target is 0
   460 ;;
   461 ;; ?_GetADCValue	unsigned int  size(1) Largest target is 0
   462 ;;
   463                           
   464                           
   465 ;;
   466 ;; Critical Paths under _main in COMMON
   467 ;;
   468 ;;   _main->_ExchChannel
   469 ;;   _main->_GetADCValue
   470 ;;   _main->_delay_ms
   471 ;;   _LED_Study_End->_delay_ms
   472 ;;   _ADC_Init->_delay_ms
   473 ;;   _Write_EEPROM_u16->_Write_EEPROM_u8
   474 ;;   _Read_EEPROM_u16->_Read_EEPROM_u8
   475 ;;   _EEPROM_Init->_Write_EEPROM_u8
   476 ;;
   477 ;; Critical Paths under _ISR in COMMON
   478 ;;
   479 ;;   None.
   480 ;;
   481 ;; Critical Paths under _main in BANK0
   482 ;;
   483 ;;   _main->_Read_EEPROM_u16
   484 ;;   _LED_Study_End->_delay_ms
   485 ;;   _ADC_Init->_delay_ms
   486 ;;   _Read_EEPROM_u16->_Read_EEPROM_u8
   487 ;;
   488 ;; Critical Paths under _ISR in BANK0
   489 ;;
   490 ;;   None.
   491 ;;
   492 ;; Critical Paths under _main in BANK1
   493 ;;
   494 ;;   None.
   495 ;;
   496 ;; Critical Paths under _ISR in BANK1
   497 ;;
   498 ;;   None.
   499                           
   500 ;;
   501 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   502 ;;
   503                           
   504 ;;
   505 ;;Call Graph Tables:
   506 ;;
   507 ;; ---------------------------------------------------------------------------------
   508 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   509 ;; ---------------------------------------------------------------------------------
   510 ;; (0) _main                                                 1     1      0     860
   511 ;;                                              9 BANK0      1     1      0
   512 ;;                        _System_init
   513 ;;                          _GPIO_Init
   514 ;;                           _ADC_Init
   515 ;;                        _EEPROM_Init
   516 ;;                      _LED_Study_End
   517 ;;                    _Read_EEPROM_u16
   518 ;;                        _ExchChannel
   519 ;;                        _GetADCValue
   520 ;;                           _delay_ms
   521 ;;                       _isKeyPressed
   522 ;;                   _Write_EEPROM_u16
   523 ;; ---------------------------------------------------------------------------------
   524 ;; (1) _LED_Study_End                                        0     0      0      68
   525 ;;                           _delay_ms
   526 ;; ---------------------------------------------------------------------------------
   527 ;; (1) _ADC_Init                                             0     0      0      68
   528 ;;                           _delay_ms
   529 ;; ---------------------------------------------------------------------------------
   530 ;; (1) _Write_EEPROM_u16                                     4     2      2     186
   531 ;;                                              0 BANK0      4     2      2
   532 ;;                    _Write_EEPROM_u8
   533 ;; ---------------------------------------------------------------------------------
   534 ;; (1) _delay_ms                                             6     4      2      68
   535 ;;                                              4 COMMON     2     0      2
   536 ;;                                              0 BANK0      4     4      0
   537 ;; ---------------------------------------------------------------------------------
   538 ;; (1) _ExchChannel                                          4     4      0      99
   539 ;;                                              4 COMMON     2     2      0
   540 ;;                                              0 BANK0      2     2      0
   541 ;; ---------------------------------------------------------------------------------
   542 ;; (1) _Read_EEPROM_u16                                      7     5      2     204
   543 ;;                                              2 BANK0      7     5      2
   544 ;;                     _Read_EEPROM_u8
   545 ;; ---------------------------------------------------------------------------------
   546 ;; (1) _EEPROM_Init                                          1     1      0      62
   547 ;;                                              0 BANK0      1     1      0
   548 ;;                    _Write_EEPROM_u8
   549 ;; ---------------------------------------------------------------------------------
   550 ;; (2) _Read_EEPROM_u8                                       3     3      0      68
   551 ;;                                              4 COMMON     1     1      0
   552 ;;                                              0 BANK0      2     2      0
   553 ;; ---------------------------------------------------------------------------------
   554 ;; (2) _Write_EEPROM_u8                                      2     1      1      62
   555 ;;                                              4 COMMON     2     1      1
   556 ;; ---------------------------------------------------------------------------------
   557 ;; (1) _isKeyPressed                                         0     0      0       0
   558 ;; ---------------------------------------------------------------------------------
   559 ;; (1) _GetADCValue                                          6     4      2     105
   560 ;;                                              4 COMMON     2     0      2
   561 ;;                                              0 BANK0      4     4      0
   562 ;; ---------------------------------------------------------------------------------
   563 ;; (1) _GPIO_Init                                            0     0      0       0
   564 ;; ---------------------------------------------------------------------------------
   565 ;; (1) _System_init                                          0     0      0       0
   566 ;; ---------------------------------------------------------------------------------
   567 ;; Estimated maximum stack depth 2
   568 ;; ---------------------------------------------------------------------------------
   569 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   570 ;; ---------------------------------------------------------------------------------
   571 ;; (3) _ISR                                                  4     4      0       0
   572 ;;                                              0 COMMON     4     4      0
   573 ;; ---------------------------------------------------------------------------------
   574 ;; Estimated maximum stack depth 3
   575 ;; ---------------------------------------------------------------------------------
   576                           
   577 ;; Call Graph Graphs:
   578                           
   579 ;; _main (ROOT)
   580 ;;   _System_init
   581 ;;   _GPIO_Init
   582 ;;   _ADC_Init
   583 ;;     _delay_ms
   584 ;;   _EEPROM_Init
   585 ;;     _Write_EEPROM_u8
   586 ;;   _LED_Study_End
   587 ;;     _delay_ms
   588 ;;   _Read_EEPROM_u16
   589 ;;     _Read_EEPROM_u8
   590 ;;   _ExchChannel
   591 ;;   _GetADCValue
   592 ;;   _delay_ms
   593 ;;   _isKeyPressed
   594 ;;   _Write_EEPROM_u16
   595 ;;     _Write_EEPROM_u8
   596 ;;
   597 ;; _ISR (ROOT)
   598 ;;
   599                           
   600 ;; Address spaces:
   601                           
   602 ;;Name               Size   Autos  Total    Cost      Usage
   603 ;;BITCOMMON            E      0       0       0        0.0%
   604 ;;EEDATA             100      0       0       0        0.0%
   605 ;;NULL                 0      0       0       0        0.0%
   606 ;;CODE                 0      0       0       0        0.0%
   607 ;;COMMON               E      6       A       1       71.4%
   608 ;;BITSFR0              0      0       0       1        0.0%
   609 ;;SFR0                 0      0       0       1        0.0%
   610 ;;BITSFR1              0      0       0       2        0.0%
   611 ;;SFR1                 0      0       0       2        0.0%
   612 ;;STACK                0      0       2       2        0.0%
   613 ;;BITBANK0            50      0       0       3        0.0%
   614 ;;BANK0               50      A       E       4       17.5%
   615 ;;BITBANK1            20      0       0       5        0.0%
   616 ;;BITSFR2              0      0       0       5        0.0%
   617 ;;SFR2                 0      0       0       5        0.0%
   618 ;;BANK1               20      0       0       6        0.0%
   619 ;;ABS                  0      0      18       7        0.0%
   620 ;;DATA                 0      0      1A       8        0.0%
   621                           
   622                           	global	_main
   623                           psect	maintext,global,class=CODE,delta=2
   624                           global __pmaintext
   625  0011                     __pmaintext:
   626                           
   627 ;; *************** function _main *****************
   628 ;; Defined at:
   629 ;;		line 37 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;		None               void
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0, pclath, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 17F/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1
   643 ;;      Params:         0       0       0
   644 ;;      Locals:         0       0       0
   645 ;;      Temps:          0       1       0
   646 ;;      Totals:         0       1       0
   647 ;;Total ram usage:        1 bytes
   648 ;; Hardware stack levels required when called:    3
   649 ;; This function calls:
   650 ;;		_System_init
   651 ;;		_GPIO_Init
   652 ;;		_ADC_Init
   653 ;;		_EEPROM_Init
   654 ;;		_LED_Study_End
   655 ;;		_Read_EEPROM_u16
   656 ;;		_ExchChannel
   657 ;;		_GetADCValue
   658 ;;		_delay_ms
   659 ;;		_isKeyPressed
   660 ;;		_Write_EEPROM_u16
   661 ;; This function is called by:
   662 ;;		Startup code after reset
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           psect	maintext
   666                           	file	"main.c"
   667                           	line	37
   668                           	global	__size_of_main
   669  00A0                     	__size_of_main	equ	__end_of_main-_main
   670                           	
   671  0011                     _main:	
   672                           	opt	stack 5
   673                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   674                           	line	38
   675                           	
   676  0011                     l8834:	
   677                           ;main.c: 38: System_init();
   678  0011  224E               	fcall	_System_init
   679                           	line	39
   680                           	
   681  0012                     l8836:	
   682                           ;main.c: 39: GPIO_Init();
   683  0012  20B1               	fcall	_GPIO_Init
   684                           	line	40
   685                           	
   686  0013                     l8838:	
   687                           ;main.c: 40: ADC_Init();
   688  0013  21CE               	fcall	_ADC_Init
   689                           	line	41
   690                           	
   691  0014                     l8840:	
   692                           ;main.c: 41: EEPROM_Init();
   693  0014  2229               	fcall	_EEPROM_Init
   694                           	line	42
   695                           	
   696  0015                     l8842:	
   697                           ;main.c: 42: LED_Study_End();
   698  0015  20E3               	fcall	_LED_Study_End
   699                           	line	43
   700                           	
   701  0016                     l8844:	
   702                           ;main.c: 43: ADC_STUDY = Read_EEPROM_u16(0x00);
   703  0016  3000               	movlw	(0)
   704  0017  2114               	fcall	_Read_EEPROM_u16
   705  0018  1283               	bcf	status, 5	;RP0=0, select bank0
   706  0019  1303               	bcf	status, 6	;RP1=0, select bank0
   707  001A  0823               	movf	(1+(?_Read_EEPROM_u16)),w
   708  001B  01F7               	clrf	(_ADC_STUDY+1)
   709  001C  07F7               	addwf	(_ADC_STUDY+1)
   710  001D  0822               	movf	(0+(?_Read_EEPROM_u16)),w
   711  001E  01F6               	clrf	(_ADC_STUDY)
   712  001F  07F6               	addwf	(_ADC_STUDY)
   713                           
   714                           	line	44
   715                           ;main.c: 44: if(ADC_STUDY == 0XFF)
   716  0020  30FF               	movlw	0FFh
   717  0021  0676               	xorwf	(_ADC_STUDY),w
   718  0022  0477               	iorwf	(_ADC_STUDY+1),w
   719  0023  1D03               	skipz
   720  0024  2826               	goto	u2551
   721  0025  2827               	goto	u2550
   722  0026                     u2551:
   723  0026  282D               	goto	l8848
   724  0027                     u2550:
   725                           	line	45
   726                           	
   727  0027                     l8846:	
   728                           ;main.c: 45: ADC_STUDY = 211;
   729  0027  30D3               	movlw	low(0D3h)
   730  0028  00F6               	movwf	(_ADC_STUDY)
   731  0029  3000               	movlw	high(0D3h)
   732  002A  00F7               	movwf	((_ADC_STUDY))+1
   733  002B  282D               	goto	l8848
   734                           	
   735  002C                     l1097:	
   736  002C  282D               	goto	l8848
   737                           	line	46
   738                           ;main.c: 46: while(1) {
   739                           	
   740  002D                     l1098:	
   741                           	line	48
   742                           	
   743  002D                     l8848:	
   744                           ;main.c: 48: ExchChannel(1);
   745  002D  3001               	movlw	(01h)
   746  002E  2166               	fcall	_ExchChannel
   747                           	line	49
   748                           	
   749  002F                     l8850:	
   750                           ;main.c: 49: for(i=0; i<5; i++)
   751  002F  01F8               	clrf	(_i)
   752                           	
   753  0030                     l8852:	
   754  0030  3005               	movlw	(05h)
   755  0031  0278               	subwf	(_i),w
   756  0032  1C03               	skipc
   757  0033  2835               	goto	u2561
   758  0034  2836               	goto	u2560
   759  0035                     u2561:
   760  0035  2838               	goto	l8856
   761  0036                     u2560:
   762  0036  284C               	goto	l8862
   763                           	
   764  0037                     l8854:	
   765  0037  284C               	goto	l8862
   766                           	line	50
   767                           	
   768  0038                     l1099:	
   769                           	
   770  0038                     l8856:	
   771                           ;main.c: 50: ADC1_INPUT = GetADCValue();
   772  0038  213D               	fcall	_GetADCValue
   773  0039  0875               	movf	(1+(?_GetADCValue)),w
   774  003A  1283               	bcf	status, 5	;RP0=0, select bank0
   775  003B  1303               	bcf	status, 6	;RP1=0, select bank0
   776  003C  01AB               	clrf	(_ADC1_INPUT+1)
   777  003D  07AB               	addwf	(_ADC1_INPUT+1)
   778  003E  0874               	movf	(0+(?_GetADCValue)),w
   779  003F  01AA               	clrf	(_ADC1_INPUT)
   780  0040  07AA               	addwf	(_ADC1_INPUT)
   781                           
   782                           	line	49
   783                           	
   784  0041                     l8858:	
   785  0041  3001               	movlw	(01h)
   786  0042  00A9               	movwf	(??_main+0)+0
   787  0043  0829               	movf	(??_main+0)+0,w
   788  0044  07F8               	addwf	(_i),f
   789                           	
   790  0045                     l8860:	
   791  0045  3005               	movlw	(05h)
   792  0046  0278               	subwf	(_i),w
   793  0047  1C03               	skipc
   794  0048  284A               	goto	u2571
   795  0049  284B               	goto	u2570
   796  004A                     u2571:
   797  004A  2838               	goto	l8856
   798  004B                     u2570:
   799  004B  284C               	goto	l8862
   800                           	
   801  004C                     l1100:	
   802                           	line	52
   803                           	
   804  004C                     l8862:	
   805                           ;main.c: 52: ExchChannel(5);
   806  004C  3005               	movlw	(05h)
   807  004D  2166               	fcall	_ExchChannel
   808                           	line	53
   809                           	
   810  004E                     l8864:	
   811                           ;main.c: 53: for(j=0; j<5; j++)
   812  004E  01F9               	clrf	(_j)
   813                           	
   814  004F                     l8866:	
   815  004F  3005               	movlw	(05h)
   816  0050  0279               	subwf	(_j),w
   817  0051  1C03               	skipc
   818  0052  2854               	goto	u2581
   819  0053  2855               	goto	u2580
   820  0054                     u2581:
   821  0054  2857               	goto	l8870
   822  0055                     u2580:
   823  0055  286B               	goto	l8876
   824                           	
   825  0056                     l8868:	
   826  0056  286B               	goto	l8876
   827                           	line	54
   828                           	
   829  0057                     l1101:	
   830                           	
   831  0057                     l8870:	
   832                           ;main.c: 54: ADC5_ADCOUT = GetADCValue();
   833  0057  213D               	fcall	_GetADCValue
   834  0058  0875               	movf	(1+(?_GetADCValue)),w
   835  0059  1283               	bcf	status, 5	;RP0=0, select bank0
   836  005A  1303               	bcf	status, 6	;RP1=0, select bank0
   837  005B  01AD               	clrf	(_ADC5_ADCOUT+1)
   838  005C  07AD               	addwf	(_ADC5_ADCOUT+1)
   839  005D  0874               	movf	(0+(?_GetADCValue)),w
   840  005E  01AC               	clrf	(_ADC5_ADCOUT)
   841  005F  07AC               	addwf	(_ADC5_ADCOUT)
   842                           
   843                           	line	53
   844                           	
   845  0060                     l8872:	
   846  0060  3001               	movlw	(01h)
   847  0061  00A9               	movwf	(??_main+0)+0
   848  0062  0829               	movf	(??_main+0)+0,w
   849  0063  07F9               	addwf	(_j),f
   850                           	
   851  0064                     l8874:	
   852  0064  3005               	movlw	(05h)
   853  0065  0279               	subwf	(_j),w
   854  0066  1C03               	skipc
   855  0067  2869               	goto	u2591
   856  0068  286A               	goto	u2590
   857  0069                     u2591:
   858  0069  2857               	goto	l8870
   859  006A                     u2590:
   860  006A  286B               	goto	l8876
   861                           	
   862  006B                     l1102:	
   863                           	line	56
   864                           	
   865  006B                     l8876:	
   866                           ;main.c: 56: delay_ms(5);
   867  006B  3005               	movlw	low(05h)
   868  006C  00F4               	movwf	(?_delay_ms)
   869  006D  3000               	movlw	high(05h)
   870  006E  00F5               	movwf	((?_delay_ms))+1
   871  006F  218B               	fcall	_delay_ms
   872                           	line	57
   873                           ;main.c: 57: if(isKeyPressed()) {
   874  0070  2244               	fcall	_isKeyPressed
   875  0071  3A00               	xorlw	0
   876  0072  1903               	skipnz
   877  0073  2875               	goto	u2601
   878  0074  2876               	goto	u2600
   879  0075                     u2601:
   880  0075  2892               	goto	l8888
   881  0076                     u2600:
   882                           	line	58
   883                           	
   884  0076                     l8878:	
   885                           ;main.c: 58: PA6=1;
   886  0076  1283               	bcf	status, 5	;RP0=0, select bank0
   887  0077  1303               	bcf	status, 6	;RP1=0, select bank0
   888  0078  1705               	bsf	(46/8),(46)&7
   889                           	line	59
   890                           	
   891  0079                     l8880:	
   892                           ;main.c: 59: ADC_STUDY = ADC5_ADCOUT+5;
   893  0079  082C               	movf	(_ADC5_ADCOUT),w
   894  007A  3E05               	addlw	low(05h)
   895  007B  00F6               	movwf	(_ADC_STUDY)
   896  007C  082D               	movf	(_ADC5_ADCOUT+1),w
   897  007D  1803               	skipnc
   898  007E  3E01               	addlw	1
   899  007F  3E00               	addlw	high(05h)
   900  0080  00F7               	movwf	1+(_ADC_STUDY)
   901                           	line	60
   902                           	
   903  0081                     l8882:	
   904                           ;main.c: 60: Write_EEPROM_u16(0x00,ADC_STUDY);
   905  0081  0877               	movf	(_ADC_STUDY+1),w
   906  0082  01A1               	clrf	(?_Write_EEPROM_u16+1)
   907  0083  07A1               	addwf	(?_Write_EEPROM_u16+1)
   908  0084  0876               	movf	(_ADC_STUDY),w
   909  0085  01A0               	clrf	(?_Write_EEPROM_u16)
   910  0086  07A0               	addwf	(?_Write_EEPROM_u16)
   911                           
   912  0087  3000               	movlw	(0)
   913  0088  2216               	fcall	_Write_EEPROM_u16
   914                           	line	61
   915                           	
   916  0089                     l8884:	
   917                           ;main.c: 61: delay_ms(500);
   918  0089  30F4               	movlw	low(01F4h)
   919  008A  00F4               	movwf	(?_delay_ms)
   920  008B  3001               	movlw	high(01F4h)
   921  008C  00F5               	movwf	((?_delay_ms))+1
   922  008D  218B               	fcall	_delay_ms
   923                           	line	62
   924                           	
   925  008E                     l8886:	
   926                           ;main.c: 62: PA6=0;
   927  008E  1283               	bcf	status, 5	;RP0=0, select bank0
   928  008F  1303               	bcf	status, 6	;RP1=0, select bank0
   929  0090  1305               	bcf	(46/8),(46)&7
   930  0091  2892               	goto	l8888
   931                           	line	63
   932                           	
   933  0092                     l1103:	
   934                           	line	64
   935                           	
   936  0092                     l8888:	
   937                           ;main.c: 63: }
   938                           ;main.c: 64: if(ADC1_INPUT < 512) {
   939  0092  3002               	movlw	high(0200h)
   940  0093  1283               	bcf	status, 5	;RP0=0, select bank0
   941  0094  1303               	bcf	status, 6	;RP1=0, select bank0
   942  0095  022B               	subwf	(_ADC1_INPUT+1),w
   943  0096  3000               	movlw	low(0200h)
   944  0097  1903               	skipnz
   945  0098  022A               	subwf	(_ADC1_INPUT),w
   946  0099  1803               	skipnc
   947  009A  289C               	goto	u2611
   948  009B  289D               	goto	u2610
   949  009C                     u2611:
   950  009C  289F               	goto	l8892
   951  009D                     u2610:
   952                           	line	65
   953                           	
   954  009D                     l8890:	
   955                           ;main.c: 65: PC2 = 0;
   956  009D  1107               	bcf	(58/8),(58)&7
   957                           	line	66
   958                           ;main.c: 66: } else {
   959  009E  282D               	goto	l8848
   960                           	
   961  009F                     l1104:	
   962                           	line	67
   963                           	
   964  009F                     l8892:	
   965                           ;main.c: 67: if(ADC5_ADCOUT <= ADC_STUDY) {
   966  009F  082D               	movf	(_ADC5_ADCOUT+1),w
   967  00A0  0277               	subwf	(_ADC_STUDY+1),w
   968  00A1  1D03               	skipz
   969  00A2  28A5               	goto	u2625
   970  00A3  082C               	movf	(_ADC5_ADCOUT),w
   971  00A4  0276               	subwf	(_ADC_STUDY),w
   972  00A5                     u2625:
   973  00A5  1C03               	skipc
   974  00A6  28A8               	goto	u2621
   975  00A7  28A9               	goto	u2620
   976  00A8                     u2621:
   977  00A8  28AB               	goto	l1106
   978  00A9                     u2620:
   979                           	line	68
   980                           	
   981  00A9                     l8894:	
   982                           ;main.c: 68: PC2=1;
   983  00A9  1507               	bsf	(58/8),(58)&7
   984                           	line	69
   985                           ;main.c: 69: } else
   986  00AA  282D               	goto	l8848
   987                           	
   988  00AB                     l1106:	
   989                           	line	70
   990                           ;main.c: 70: PC2=0;
   991  00AB  1107               	bcf	(58/8),(58)&7
   992  00AC  282D               	goto	l8848
   993                           	
   994  00AD                     l1107:	
   995  00AD  282D               	goto	l8848
   996                           	line	71
   997                           	
   998  00AE                     l1105:	
   999  00AE  282D               	goto	l8848
  1000                           	line	72
  1001                           	
  1002  00AF                     l1108:	
  1003                           	line	46
  1004  00AF  282D               	goto	l8848
  1005                           	
  1006  00B0                     l1109:	
  1007                           	line	73
  1008                           	
  1009  00B0                     l1110:	
  1010                           	global	start
  1011  00B0  2810               	ljmp	start
  1012                           	opt stack 0
  1013                           GLOBAL	__end_of_main
  1014  00B1                     	__end_of_main:
  1015 ;; =============== function _main ends ============
  1016                           
  1017                           	signat	_main,88
  1018                           	global	_LED_Study_End
  1019                           psect	text545,local,class=CODE,delta=2
  1020                           global __ptext545
  1021  00E3                     __ptext545:
  1022                           
  1023 ;; *************** function _LED_Study_End *****************
  1024 ;; Defined at:
  1025 ;;		line 112 in file "myconfiguration.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;		None               void
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0, pclath, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1
  1039 ;;      Params:         0       0       0
  1040 ;;      Locals:         0       0       0
  1041 ;;      Temps:          0       0       0
  1042 ;;      Totals:         0       0       0
  1043 ;;Total ram usage:        0 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    2
  1046 ;; This function calls:
  1047 ;;		_delay_ms
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           psect	text545
  1053                           	file	"myconfiguration.c"
  1054                           	line	112
  1055                           	global	__size_of_LED_Study_End
  1056  0031                     	__size_of_LED_Study_End	equ	__end_of_LED_Study_End-_LED_Study_End
  1057                           	
  1058  00E3                     _LED_Study_End:	
  1059                           	opt	stack 5
  1060                           ; Regs used in _LED_Study_End: [wreg+status,2+status,0+pclath+cstack]
  1061                           	line	113
  1062                           	
  1063  00E3                     l8820:	
  1064                           ;myconfiguration.c: 113: PA6 = 1;
  1065  00E3  1283               	bcf	status, 5	;RP0=0, select bank0
  1066  00E4  1303               	bcf	status, 6	;RP1=0, select bank0
  1067  00E5  1705               	bsf	(46/8),(46)&7
  1068                           	line	114
  1069                           	
  1070  00E6                     l8822:	
  1071                           ;myconfiguration.c: 114: delay_ms(50);
  1072  00E6  3032               	movlw	low(032h)
  1073  00E7  00F4               	movwf	(?_delay_ms)
  1074  00E8  3000               	movlw	high(032h)
  1075  00E9  00F5               	movwf	((?_delay_ms))+1
  1076  00EA  218B               	fcall	_delay_ms
  1077                           	line	115
  1078                           	
  1079  00EB                     l8824:	
  1080                           ;myconfiguration.c: 115: PA6 = 0;
  1081  00EB  1283               	bcf	status, 5	;RP0=0, select bank0
  1082  00EC  1303               	bcf	status, 6	;RP1=0, select bank0
  1083  00ED  1305               	bcf	(46/8),(46)&7
  1084                           	line	116
  1085                           ;myconfiguration.c: 116: delay_ms(50);
  1086  00EE  3032               	movlw	low(032h)
  1087  00EF  00F4               	movwf	(?_delay_ms)
  1088  00F0  3000               	movlw	high(032h)
  1089  00F1  00F5               	movwf	((?_delay_ms))+1
  1090  00F2  218B               	fcall	_delay_ms
  1091                           	line	117
  1092                           	
  1093  00F3                     l8826:	
  1094                           ;myconfiguration.c: 117: PA6 = 1;
  1095  00F3  1283               	bcf	status, 5	;RP0=0, select bank0
  1096  00F4  1303               	bcf	status, 6	;RP1=0, select bank0
  1097  00F5  1705               	bsf	(46/8),(46)&7
  1098                           	line	118
  1099                           ;myconfiguration.c: 118: delay_ms(50);
  1100  00F6  3032               	movlw	low(032h)
  1101  00F7  00F4               	movwf	(?_delay_ms)
  1102  00F8  3000               	movlw	high(032h)
  1103  00F9  00F5               	movwf	((?_delay_ms))+1
  1104  00FA  218B               	fcall	_delay_ms
  1105                           	line	119
  1106                           	
  1107  00FB                     l8828:	
  1108                           ;myconfiguration.c: 119: PA6 = 0;
  1109  00FB  1283               	bcf	status, 5	;RP0=0, select bank0
  1110  00FC  1303               	bcf	status, 6	;RP1=0, select bank0
  1111  00FD  1305               	bcf	(46/8),(46)&7
  1112                           	line	120
  1113                           ;myconfiguration.c: 120: delay_ms(50);
  1114  00FE  3032               	movlw	low(032h)
  1115  00FF  00F4               	movwf	(?_delay_ms)
  1116  0100  3000               	movlw	high(032h)
  1117  0101  00F5               	movwf	((?_delay_ms))+1
  1118  0102  218B               	fcall	_delay_ms
  1119                           	line	121
  1120                           	
  1121  0103                     l8830:	
  1122                           ;myconfiguration.c: 121: PA6 = 1;
  1123  0103  1283               	bcf	status, 5	;RP0=0, select bank0
  1124  0104  1303               	bcf	status, 6	;RP1=0, select bank0
  1125  0105  1705               	bsf	(46/8),(46)&7
  1126                           	line	122
  1127                           ;myconfiguration.c: 122: delay_ms(50);
  1128  0106  3032               	movlw	low(032h)
  1129  0107  00F4               	movwf	(?_delay_ms)
  1130  0108  3000               	movlw	high(032h)
  1131  0109  00F5               	movwf	((?_delay_ms))+1
  1132  010A  218B               	fcall	_delay_ms
  1133                           	line	123
  1134                           	
  1135  010B                     l8832:	
  1136                           ;myconfiguration.c: 123: PA6 = 0;
  1137  010B  1283               	bcf	status, 5	;RP0=0, select bank0
  1138  010C  1303               	bcf	status, 6	;RP1=0, select bank0
  1139  010D  1305               	bcf	(46/8),(46)&7
  1140                           	line	124
  1141                           ;myconfiguration.c: 124: delay_ms(50);
  1142  010E  3032               	movlw	low(032h)
  1143  010F  00F4               	movwf	(?_delay_ms)
  1144  0110  3000               	movlw	high(032h)
  1145  0111  00F5               	movwf	((?_delay_ms))+1
  1146  0112  218B               	fcall	_delay_ms
  1147                           	line	125
  1148                           	
  1149  0113                     l3274:	
  1150  0113  0008               	return
  1151                           	opt stack 0
  1152                           GLOBAL	__end_of_LED_Study_End
  1153  0114                     	__end_of_LED_Study_End:
  1154 ;; =============== function _LED_Study_End ends ============
  1155                           
  1156                           	signat	_LED_Study_End,88
  1157                           	global	_ADC_Init
  1158                           psect	text546,local,class=CODE,delta=2
  1159                           global __ptext546
  1160  01CE                     __ptext546:
  1161                           
  1162 ;; *************** function _ADC_Init *****************
  1163 ;; Defined at:
  1164 ;;		line 19 in file "myadc.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;		None               void
  1171 ;; Registers used:
  1172 ;;		wreg, status,2, status,0, pclath, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMMON   BANK0   BANK1
  1178 ;;      Params:         0       0       0
  1179 ;;      Locals:         0       0       0
  1180 ;;      Temps:          0       0       0
  1181 ;;      Totals:         0       0       0
  1182 ;;Total ram usage:        0 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    2
  1185 ;; This function calls:
  1186 ;;		_delay_ms
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           psect	text546
  1192                           	file	"myadc.c"
  1193                           	line	19
  1194                           	global	__size_of_ADC_Init
  1195  001D                     	__size_of_ADC_Init	equ	__end_of_ADC_Init-_ADC_Init
  1196                           	
  1197  01CE                     _ADC_Init:	
  1198                           	opt	stack 5
  1199                           ; Regs used in _ADC_Init: [wreg+status,2+status,0+pclath+cstack]
  1200                           	line	21
  1201                           	
  1202  01CE                     l8800:	
  1203                           ;myadc.c: 21: TRISC1=1;
  1204  01CE  1683               	bsf	status, 5	;RP0=1, select bank1
  1205  01CF  1303               	bcf	status, 6	;RP1=0, select bank1
  1206  01D0  1487               	bsf	(1081/8)^080h,(1081)&7
  1207                           	line	22
  1208                           ;myadc.c: 22: TRISA1=1;
  1209  01D1  1485               	bsf	(1065/8)^080h,(1065)&7
  1210                           	line	23
  1211                           ;myadc.c: 23: ANSEL1=1;
  1212  01D2  1491               	bsf	(1161/8)^080h,(1161)&7
  1213                           	line	24
  1214                           ;myadc.c: 24: ANSEL5=1;
  1215  01D3  1691               	bsf	(1165/8)^080h,(1165)&7
  1216                           	line	27
  1217                           ;myadc.c: 27: DIVS=0;
  1218  01D4  139F               	bcf	(1279/8)^080h,(1279)&7
  1219                           	line	28
  1220                           ;myadc.c: 28: ADCS0=0;
  1221  01D5  121F               	bcf	(1276/8)^080h,(1276)&7
  1222                           	line	29
  1223                           ;myadc.c: 29: ADCS1=0;
  1224  01D6  129F               	bcf	(1277/8)^080h,(1277)&7
  1225                           	line	30
  1226                           ;myadc.c: 30: ADCS2=0;
  1227  01D7  131F               	bcf	(1278/8)^080h,(1278)&7
  1228                           	line	32
  1229                           	
  1230  01D8                     l8802:	
  1231                           ;myadc.c: 32: ADCON0=0B10000001;
  1232  01D8  3081               	movlw	(081h)
  1233  01D9  1283               	bcf	status, 5	;RP0=0, select bank0
  1234  01DA  1303               	bcf	status, 6	;RP1=0, select bank0
  1235  01DB  009F               	movwf	(31)	;volatile
  1236                           	line	33
  1237                           	
  1238  01DC                     l8804:	
  1239                           ;myadc.c: 33: VCFG0=0;
  1240  01DC  129F               	bcf	(253/8),(253)&7
  1241                           	line	34
  1242                           	
  1243  01DD                     l8806:	
  1244                           ;myadc.c: 34: CHS0=1;
  1245  01DD  151F               	bsf	(250/8),(250)&7
  1246                           	line	35
  1247                           	
  1248  01DE                     l8808:	
  1249                           ;myadc.c: 35: CHS1=0;
  1250  01DE  119F               	bcf	(251/8),(251)&7
  1251                           	line	36
  1252                           	
  1253  01DF                     l8810:	
  1254                           ;myadc.c: 36: CHS2=1;
  1255  01DF  161F               	bsf	(252/8),(252)&7
  1256                           	line	37
  1257                           	
  1258  01E0                     l8812:	
  1259                           ;myadc.c: 37: ADFM=1;
  1260  01E0  179F               	bsf	(255/8),(255)&7
  1261                           	line	38
  1262                           	
  1263  01E1                     l8814:	
  1264                           ;myadc.c: 38: ADON=1;
  1265  01E1  141F               	bsf	(248/8),(248)&7
  1266                           	line	40
  1267                           	
  1268  01E2                     l8816:	
  1269                           ;myadc.c: 40: delay_ms(1);
  1270  01E2  3001               	movlw	low(01h)
  1271  01E3  00F4               	movwf	(?_delay_ms)
  1272  01E4  3000               	movlw	high(01h)
  1273  01E5  00F5               	movwf	((?_delay_ms))+1
  1274  01E6  218B               	fcall	_delay_ms
  1275                           	line	41
  1276                           	
  1277  01E7                     l8818:	
  1278                           ;myadc.c: 41: GO_DONE=1;
  1279  01E7  1283               	bcf	status, 5	;RP0=0, select bank0
  1280  01E8  1303               	bcf	status, 6	;RP1=0, select bank0
  1281  01E9  149F               	bsf	(249/8),(249)&7
  1282                           	line	42
  1283                           	
  1284  01EA                     l2182:	
  1285  01EA  0008               	return
  1286                           	opt stack 0
  1287                           GLOBAL	__end_of_ADC_Init
  1288  01EB                     	__end_of_ADC_Init:
  1289 ;; =============== function _ADC_Init ends ============
  1290                           
  1291                           	signat	_ADC_Init,88
  1292                           	global	_Write_EEPROM_u16
  1293                           psect	text547,local,class=CODE,delta=2
  1294                           global __ptext547
  1295  0216                     __ptext547:
  1296                           
  1297 ;; *************** function _Write_EEPROM_u16 *****************
  1298 ;; Defined at:
  1299 ;;		line 21 in file "myeeprom.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  EEAddress       1    wreg     unsigned char 
  1302 ;;  EEDatas         2    0[BANK0 ] unsigned int 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  EEAddress       1    3[BANK0 ] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;		None               void
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0, pclath, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMMON   BANK0   BANK1
  1314 ;;      Params:         0       2       0
  1315 ;;      Locals:         0       1       0
  1316 ;;      Temps:          0       1       0
  1317 ;;      Totals:         0       4       0
  1318 ;;Total ram usage:        4 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    2
  1321 ;; This function calls:
  1322 ;;		_Write_EEPROM_u8
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           psect	text547
  1328                           	file	"myeeprom.c"
  1329                           	line	21
  1330                           	global	__size_of_Write_EEPROM_u16
  1331  0013                     	__size_of_Write_EEPROM_u16	equ	__end_of_Write_EEPROM_u16-_Write_EEPROM_u16
  1332                           	
  1333  0216                     _Write_EEPROM_u16:	
  1334                           	opt	stack 5
  1335                           ; Regs used in _Write_EEPROM_u16: [wreg+status,2+status,0+pclath+cstack]
  1336                           ;Write_EEPROM_u16@EEAddress stored from wreg
  1337  0216  1283               	bcf	status, 5	;RP0=0, select bank0
  1338  0217  1303               	bcf	status, 6	;RP1=0, select bank0
  1339  0218  00A3               	movwf	(Write_EEPROM_u16@EEAddress)
  1340                           	line	22
  1341                           	
  1342  0219                     l8798:	
  1343                           ;myeeprom.c: 22: Write_EEPROM_u8(EEAddress,(EEDatas>>8)&0xff);
  1344  0219  0821               	movf	(Write_EEPROM_u16@EEDatas+1),w
  1345  021A  00A2               	movwf	(??_Write_EEPROM_u16+0)+0
  1346  021B  0822               	movf	(??_Write_EEPROM_u16+0)+0,w
  1347  021C  00F4               	movwf	(?_Write_EEPROM_u8)
  1348  021D  0823               	movf	(Write_EEPROM_u16@EEAddress),w
  1349  021E  21AD               	fcall	_Write_EEPROM_u8
  1350                           	line	23
  1351                           ;myeeprom.c: 23: Write_EEPROM_u8(EEAddress+1,EEDatas&0xff);
  1352  021F  1283               	bcf	status, 5	;RP0=0, select bank0
  1353  0220  1303               	bcf	status, 6	;RP1=0, select bank0
  1354  0221  0820               	movf	(Write_EEPROM_u16@EEDatas),w
  1355  0222  00A2               	movwf	(??_Write_EEPROM_u16+0)+0
  1356  0223  0822               	movf	(??_Write_EEPROM_u16+0)+0,w
  1357  0224  00F4               	movwf	(?_Write_EEPROM_u8)
  1358  0225  0823               	movf	(Write_EEPROM_u16@EEAddress),w
  1359  0226  3E01               	addlw	01h
  1360  0227  21AD               	fcall	_Write_EEPROM_u8
  1361                           	line	24
  1362                           	
  1363  0228                     l4346:	
  1364  0228  0008               	return
  1365                           	opt stack 0
  1366                           GLOBAL	__end_of_Write_EEPROM_u16
  1367  0229                     	__end_of_Write_EEPROM_u16:
  1368 ;; =============== function _Write_EEPROM_u16 ends ============
  1369                           
  1370                           	signat	_Write_EEPROM_u16,8312
  1371                           	global	_delay_ms
  1372                           psect	text548,local,class=CODE,delta=2
  1373                           global __ptext548
  1374  018B                     __ptext548:
  1375                           
  1376 ;; *************** function _delay_ms *****************
  1377 ;; Defined at:
  1378 ;;		line 90 in file "myconfiguration.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  x               2    4[COMMON] unsigned int 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  i               2    2[BANK0 ] unsigned int 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;		None               void
  1385 ;; Registers used:
  1386 ;;		wreg, status,2
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1
  1392 ;;      Params:         2       0       0
  1393 ;;      Locals:         0       2       0
  1394 ;;      Temps:          0       2       0
  1395 ;;      Totals:         2       4       0
  1396 ;;Total ram usage:        6 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    1
  1399 ;; This function calls:
  1400 ;;		Nothing
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;;		_ADC_Init
  1404 ;;		_LED_Study_End
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           psect	text548
  1408                           	file	"myconfiguration.c"
  1409                           	line	90
  1410                           	global	__size_of_delay_ms
  1411  0022                     	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  1412                           	
  1413  018B                     _delay_ms:	
  1414                           	opt	stack 6
  1415                           ; Regs used in _delay_ms: [wreg+status,2]
  1416                           	line	92
  1417                           	
  1418  018B                     l8794:	
  1419                           ;myconfiguration.c: 91: unsigned int i;
  1420                           ;myconfiguration.c: 92: for(i=0; i<x; i++) {
  1421  018B  1283               	bcf	status, 5	;RP0=0, select bank0
  1422  018C  1303               	bcf	status, 6	;RP1=0, select bank0
  1423  018D  01A2               	clrf	(delay_ms@i)
  1424  018E  01A3               	clrf	(delay_ms@i+1)
  1425  018F  29A1               	goto	l3262
  1426                           	
  1427  0190                     l3263:	
  1428                           	line	93
  1429                           	
  1430  0190                     l8796:	
  1431                           ;myconfiguration.c: 93: _delay((unsigned long)((1)*(16000000/4000.0)));
  1432                           	opt asmopt_off
  1433  0190  3006               movlw	6
  1434  0191  00A1               movwf	((??_delay_ms+0)+0+1),f
  1435  0192  3030               	movlw	48
  1436  0193  00A0               movwf	((??_delay_ms+0)+0),f
  1437  0194                     u2637:
  1438  0194  0BA0               	decfsz	((??_delay_ms+0)+0),f
  1439  0195  2994               	goto	u2637
  1440  0196  0BA1               	decfsz	((??_delay_ms+0)+0+1),f
  1441  0197  2994               	goto	u2637
  1442  0198  0064               	clrwdt
  1443                           opt asmopt_on
  1444                           
  1445                           	line	92
  1446  0199  3001               	movlw	low(01h)
  1447  019A  1283               	bcf	status, 5	;RP0=0, select bank0
  1448  019B  1303               	bcf	status, 6	;RP1=0, select bank0
  1449  019C  07A2               	addwf	(delay_ms@i),f
  1450  019D  1803               	skipnc
  1451  019E  0AA3               	incf	(delay_ms@i+1),f
  1452  019F  3000               	movlw	high(01h)
  1453  01A0  07A3               	addwf	(delay_ms@i+1),f
  1454                           	
  1455  01A1                     l3262:	
  1456  01A1  0875               	movf	(delay_ms@x+1),w
  1457  01A2  0223               	subwf	(delay_ms@i+1),w
  1458  01A3  1D03               	skipz
  1459  01A4  29A7               	goto	u2545
  1460  01A5  0874               	movf	(delay_ms@x),w
  1461  01A6  0222               	subwf	(delay_ms@i),w
  1462  01A7                     u2545:
  1463  01A7  1C03               	skipc
  1464  01A8  29AA               	goto	u2541
  1465  01A9  29AB               	goto	u2540
  1466  01AA                     u2541:
  1467  01AA  2990               	goto	l8796
  1468  01AB                     u2540:
  1469  01AB  29AC               	goto	l3265
  1470                           	
  1471  01AC                     l3264:	
  1472                           	line	95
  1473                           	
  1474  01AC                     l3265:	
  1475  01AC  0008               	return
  1476                           	opt stack 0
  1477                           GLOBAL	__end_of_delay_ms
  1478  01AD                     	__end_of_delay_ms:
  1479 ;; =============== function _delay_ms ends ============
  1480                           
  1481                           	signat	_delay_ms,4216
  1482                           	global	_ExchChannel
  1483                           psect	text549,local,class=CODE,delta=2
  1484                           global __ptext549
  1485  0166                     __ptext549:
  1486                           
  1487 ;; *************** function _ExchChannel *****************
  1488 ;; Defined at:
  1489 ;;		line 67 in file "myadc.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  ch_temp         1    wreg     unsigned char 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;  ch_temp         1    0[BANK0 ] unsigned char 
  1494 ;;  adc_ch_temp     1    1[BANK0 ] unsigned char 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;		None               void
  1497 ;; Registers used:
  1498 ;;		wreg, status,2, status,0
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1
  1504 ;;      Params:         0       0       0
  1505 ;;      Locals:         0       2       0
  1506 ;;      Temps:          2       0       0
  1507 ;;      Totals:         2       2       0
  1508 ;;Total ram usage:        4 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; Hardware stack levels required when called:    1
  1511 ;; This function calls:
  1512 ;;		Nothing
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           psect	text549
  1518                           	file	"myadc.c"
  1519                           	line	67
  1520                           	global	__size_of_ExchChannel
  1521  0025                     	__size_of_ExchChannel	equ	__end_of_ExchChannel-_ExchChannel
  1522                           	
  1523  0166                     _ExchChannel:	
  1524                           	opt	stack 6
  1525                           ; Regs used in _ExchChannel: [wreg+status,2+status,0]
  1526                           ;ExchChannel@ch_temp stored from wreg
  1527                           	line	70
  1528  0166  1283               	bcf	status, 5	;RP0=0, select bank0
  1529  0167  1303               	bcf	status, 6	;RP1=0, select bank0
  1530  0168  00A0               	movwf	(ExchChannel@ch_temp)
  1531                           	
  1532  0169                     l8786:	
  1533                           ;myadc.c: 68: unsigned char adc_ch_temp;
  1534                           ;myadc.c: 70: adc_ch_temp = ch_temp;
  1535  0169  0820               	movf	(ExchChannel@ch_temp),w
  1536  016A  00F4               	movwf	(??_ExchChannel+0)+0
  1537  016B  0874               	movf	(??_ExchChannel+0)+0,w
  1538  016C  00A1               	movwf	(ExchChannel@adc_ch_temp)
  1539                           	line	71
  1540                           	
  1541  016D                     l8788:	
  1542                           ;myadc.c: 71: adc_ch_temp = adc_ch_temp<<2;
  1543  016D  0821               	movf	(ExchChannel@adc_ch_temp),w
  1544  016E  00F4               	movwf	(??_ExchChannel+0)+0
  1545  016F  3001               	movlw	(02h)-1
  1546  0170                     u2535:
  1547  0170  1003               	clrc
  1548  0171  0DF4               	rlf	(??_ExchChannel+0)+0,f
  1549  0172  3EFF               	addlw	-1
  1550  0173  1D03               	skipz
  1551  0174  2970               	goto	u2535
  1552  0175  1003               	clrc
  1553  0176  0D74               	rlf	(??_ExchChannel+0)+0,w
  1554  0177  00F5               	movwf	(??_ExchChannel+1)+0
  1555  0178  0875               	movf	(??_ExchChannel+1)+0,w
  1556  0179  00A1               	movwf	(ExchChannel@adc_ch_temp)
  1557                           	line	72
  1558                           	
  1559  017A                     l8790:	
  1560                           ;myadc.c: 72: ADCON0 = (ADCON0&0xe3)|adc_ch_temp;
  1561  017A  081F               	movf	(31),w
  1562  017B  39E3               	andlw	0E3h
  1563  017C  0421               	iorwf	(ExchChannel@adc_ch_temp),w
  1564  017D  009F               	movwf	(31)	;volatile
  1565                           	line	73
  1566                           ;myadc.c: 73: _delay((unsigned long)((1)*(16000000/4000.0)));
  1567                           	opt asmopt_off
  1568  017E  3006               movlw	6
  1569  017F  00F5               movwf	((??_ExchChannel+0)+0+1),f
  1570  0180  3030               	movlw	48
  1571  0181  00F4               movwf	((??_ExchChannel+0)+0),f
  1572  0182                     u2647:
  1573  0182  0BF4               	decfsz	((??_ExchChannel+0)+0),f
  1574  0183  2982               	goto	u2647
  1575  0184  0BF5               	decfsz	((??_ExchChannel+0)+0+1),f
  1576  0185  2982               	goto	u2647
  1577  0186  0064               	clrwdt
  1578                           opt asmopt_on
  1579                           
  1580                           	line	74
  1581                           	
  1582  0187                     l8792:	
  1583                           ;myadc.c: 74: GO_DONE=1;
  1584  0187  1283               	bcf	status, 5	;RP0=0, select bank0
  1585  0188  1303               	bcf	status, 6	;RP1=0, select bank0
  1586  0189  149F               	bsf	(249/8),(249)&7
  1587                           	line	75
  1588                           	
  1589  018A                     l2189:	
  1590  018A  0008               	return
  1591                           	opt stack 0
  1592                           GLOBAL	__end_of_ExchChannel
  1593  018B                     	__end_of_ExchChannel:
  1594 ;; =============== function _ExchChannel ends ============
  1595                           
  1596                           	signat	_ExchChannel,4216
  1597                           	global	_Read_EEPROM_u16
  1598                           psect	text550,local,class=CODE,delta=2
  1599                           global __ptext550
  1600  0114                     __ptext550:
  1601                           
  1602 ;; *************** function _Read_EEPROM_u16 *****************
  1603 ;; Defined at:
  1604 ;;		line 27 in file "myeeprom.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  EEAddress       1    wreg     unsigned char 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  EEAddress       1    6[BANK0 ] unsigned char 
  1609 ;;  EepromData      2    7[BANK0 ] unsigned int 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  2    2[BANK0 ] unsigned int 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1
  1619 ;;      Params:         0       2       0
  1620 ;;      Locals:         0       3       0
  1621 ;;      Temps:          0       2       0
  1622 ;;      Totals:         0       7       0
  1623 ;;Total ram usage:        7 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    2
  1626 ;; This function calls:
  1627 ;;		_Read_EEPROM_u8
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           psect	text550
  1633                           	file	"myeeprom.c"
  1634                           	line	27
  1635                           	global	__size_of_Read_EEPROM_u16
  1636  0029                     	__size_of_Read_EEPROM_u16	equ	__end_of_Read_EEPROM_u16-_Read_EEPROM_u16
  1637                           	
  1638  0114                     _Read_EEPROM_u16:	
  1639                           	opt	stack 5
  1640                           ; Regs used in _Read_EEPROM_u16: [wreg+status,2+status,0+pclath+cstack]
  1641                           ;Read_EEPROM_u16@EEAddress stored from wreg
  1642  0114  1283               	bcf	status, 5	;RP0=0, select bank0
  1643  0115  1303               	bcf	status, 6	;RP1=0, select bank0
  1644  0116  00A6               	movwf	(Read_EEPROM_u16@EEAddress)
  1645                           	line	28
  1646                           	
  1647  0117                     l8774:	
  1648                           ;myeeprom.c: 28: unsigned int EepromData=0;
  1649  0117  01A7               	clrf	(Read_EEPROM_u16@EepromData)
  1650  0118  01A8               	clrf	(Read_EEPROM_u16@EepromData+1)
  1651                           	line	30
  1652                           	
  1653  0119                     l8776:	
  1654                           ;myeeprom.c: 30: EepromData = Read_EEPROM_u8(EEAddress);
  1655  0119  0826               	movf	(Read_EEPROM_u16@EEAddress),w
  1656  011A  21EB               	fcall	_Read_EEPROM_u8
  1657  011B  1283               	bcf	status, 5	;RP0=0, select bank0
  1658  011C  1303               	bcf	status, 6	;RP1=0, select bank0
  1659  011D  00A4               	movwf	(??_Read_EEPROM_u16+0)+0
  1660  011E  01A5               	clrf	(??_Read_EEPROM_u16+0)+0+1
  1661  011F  0824               	movf	0+(??_Read_EEPROM_u16+0)+0,w
  1662  0120  00A7               	movwf	(Read_EEPROM_u16@EepromData)
  1663  0121  0825               	movf	1+(??_Read_EEPROM_u16+0)+0,w
  1664  0122  00A8               	movwf	(Read_EEPROM_u16@EepromData+1)
  1665                           	line	31
  1666                           	
  1667  0123                     l8778:	
  1668                           ;myeeprom.c: 31: EepromData = EepromData<<8;
  1669  0123  0827               	movf	(Read_EEPROM_u16@EepromData),w
  1670  0124  00A5               	movwf	(??_Read_EEPROM_u16+0)+0+1
  1671  0125  01A4               	clrf	(??_Read_EEPROM_u16+0)+0
  1672  0126  0824               	movf	0+(??_Read_EEPROM_u16+0)+0,w
  1673  0127  00A7               	movwf	(Read_EEPROM_u16@EepromData)
  1674  0128  0825               	movf	1+(??_Read_EEPROM_u16+0)+0,w
  1675  0129  00A8               	movwf	(Read_EEPROM_u16@EepromData+1)
  1676                           	line	32
  1677                           	
  1678  012A                     l8780:	
  1679                           ;myeeprom.c: 32: EepromData |= Read_EEPROM_u8(EEAddress+1);
  1680  012A  0826               	movf	(Read_EEPROM_u16@EEAddress),w
  1681  012B  3E01               	addlw	01h
  1682  012C  21EB               	fcall	_Read_EEPROM_u8
  1683  012D  1283               	bcf	status, 5	;RP0=0, select bank0
  1684  012E  1303               	bcf	status, 6	;RP1=0, select bank0
  1685  012F  00A4               	movwf	(??_Read_EEPROM_u16+0)+0
  1686  0130  01A5               	clrf	(??_Read_EEPROM_u16+0)+0+1
  1687  0131  0824               	movf	0+(??_Read_EEPROM_u16+0)+0,w
  1688  0132  04A7               	iorwf	(Read_EEPROM_u16@EepromData),f
  1689  0133  0825               	movf	1+(??_Read_EEPROM_u16+0)+0,w
  1690  0134  04A8               	iorwf	(Read_EEPROM_u16@EepromData+1),f
  1691                           	line	33
  1692                           	
  1693  0135                     l8782:	
  1694                           ;myeeprom.c: 33: return EepromData;
  1695  0135  0828               	movf	(Read_EEPROM_u16@EepromData+1),w
  1696  0136  01A3               	clrf	(?_Read_EEPROM_u16+1)
  1697  0137  07A3               	addwf	(?_Read_EEPROM_u16+1)
  1698  0138  0827               	movf	(Read_EEPROM_u16@EepromData),w
  1699  0139  01A2               	clrf	(?_Read_EEPROM_u16)
  1700  013A  07A2               	addwf	(?_Read_EEPROM_u16)
  1701                           
  1702  013B  293C               	goto	l4349
  1703                           	
  1704  013C                     l8784:	
  1705                           	line	34
  1706                           	
  1707  013C                     l4349:	
  1708  013C  0008               	return
  1709                           	opt stack 0
  1710                           GLOBAL	__end_of_Read_EEPROM_u16
  1711  013D                     	__end_of_Read_EEPROM_u16:
  1712 ;; =============== function _Read_EEPROM_u16 ends ============
  1713                           
  1714                           	signat	_Read_EEPROM_u16,4218
  1715                           	global	_EEPROM_Init
  1716                           psect	text551,local,class=CODE,delta=2
  1717                           global __ptext551
  1718  0229                     __ptext551:
  1719                           
  1720 ;; *************** function _EEPROM_Init *****************
  1721 ;; Defined at:
  1722 ;;		line 14 in file "myeeprom.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;		None               void
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0, pclath, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1
  1736 ;;      Params:         0       0       0
  1737 ;;      Locals:         0       0       0
  1738 ;;      Temps:          0       1       0
  1739 ;;      Totals:         0       1       0
  1740 ;;Total ram usage:        1 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    2
  1743 ;; This function calls:
  1744 ;;		_Write_EEPROM_u8
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           psect	text551
  1750                           	file	"myeeprom.c"
  1751                           	line	14
  1752                           	global	__size_of_EEPROM_Init
  1753  0011                     	__size_of_EEPROM_Init	equ	__end_of_EEPROM_Init-_EEPROM_Init
  1754                           	
  1755  0229                     _EEPROM_Init:	
  1756                           	opt	stack 5
  1757                           ; Regs used in _EEPROM_Init: [wreg+status,2+status,0+pclath+cstack]
  1758                           	line	15
  1759                           	
  1760  0229                     l8772:	
  1761                           ;myeeprom.c: 15: Write_EEPROM_u8(0xFF,0xAA);
  1762  0229  30AA               	movlw	(0AAh)
  1763  022A  1283               	bcf	status, 5	;RP0=0, select bank0
  1764  022B  1303               	bcf	status, 6	;RP1=0, select bank0
  1765  022C  00A0               	movwf	(??_EEPROM_Init+0)+0
  1766  022D  0820               	movf	(??_EEPROM_Init+0)+0,w
  1767  022E  00F4               	movwf	(?_Write_EEPROM_u8)
  1768  022F  30FF               	movlw	(0FFh)
  1769  0230  21AD               	fcall	_Write_EEPROM_u8
  1770                           	line	16
  1771                           ;myeeprom.c: 16: Write_EEPROM_u8(0xFF,0xAA);
  1772  0231  30AA               	movlw	(0AAh)
  1773  0232  1283               	bcf	status, 5	;RP0=0, select bank0
  1774  0233  1303               	bcf	status, 6	;RP1=0, select bank0
  1775  0234  00A0               	movwf	(??_EEPROM_Init+0)+0
  1776  0235  0820               	movf	(??_EEPROM_Init+0)+0,w
  1777  0236  00F4               	movwf	(?_Write_EEPROM_u8)
  1778  0237  30FF               	movlw	(0FFh)
  1779  0238  21AD               	fcall	_Write_EEPROM_u8
  1780                           	line	17
  1781                           	
  1782  0239                     l4343:	
  1783  0239  0008               	return
  1784                           	opt stack 0
  1785                           GLOBAL	__end_of_EEPROM_Init
  1786  023A                     	__end_of_EEPROM_Init:
  1787 ;; =============== function _EEPROM_Init ends ============
  1788                           
  1789                           	signat	_EEPROM_Init,88
  1790                           	global	_Read_EEPROM_u8
  1791                           psect	text552,local,class=CODE,delta=2
  1792                           global __ptext552
  1793  01EB                     __ptext552:
  1794                           
  1795 ;; *************** function _Read_EEPROM_u8 *****************
  1796 ;; Defined at:
  1797 ;;		line 51 in file "myeeprom.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  EEAddress       1    wreg     unsigned char 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  EEAddress       1    0[BANK0 ] unsigned char 
  1802 ;;  EepromData      1    1[BANK0 ] unsigned char 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      unsigned char 
  1805 ;; Registers used:
  1806 ;;		wreg
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1
  1812 ;;      Params:         0       0       0
  1813 ;;      Locals:         0       2       0
  1814 ;;      Temps:          1       0       0
  1815 ;;      Totals:         1       2       0
  1816 ;;Total ram usage:        3 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    1
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_Read_EEPROM_u16
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           psect	text552
  1826                           	file	"myeeprom.c"
  1827                           	line	51
  1828                           	global	__size_of_Read_EEPROM_u8
  1829  0017                     	__size_of_Read_EEPROM_u8	equ	__end_of_Read_EEPROM_u8-_Read_EEPROM_u8
  1830                           	
  1831  01EB                     _Read_EEPROM_u8:	
  1832                           	opt	stack 5
  1833                           ; Regs used in _Read_EEPROM_u8: [wreg]
  1834                           ;Read_EEPROM_u8@EEAddress stored from wreg
  1835  01EB  1283               	bcf	status, 5	;RP0=0, select bank0
  1836  01EC  1303               	bcf	status, 6	;RP1=0, select bank0
  1837  01ED  00A0               	movwf	(Read_EEPROM_u8@EEAddress)
  1838                           	line	52
  1839                           	
  1840  01EE                     l8762:	
  1841                           ;myeeprom.c: 52: unsigned char EepromData=0;
  1842  01EE  01A1               	clrf	(Read_EEPROM_u8@EepromData)
  1843                           	line	53
  1844                           	
  1845  01EF                     l8764:	
  1846                           ;myeeprom.c: 53: EEADR = EEAddress;
  1847  01EF  0820               	movf	(Read_EEPROM_u8@EEAddress),w
  1848  01F0  1683               	bsf	status, 5	;RP0=1, select bank1
  1849  01F1  1303               	bcf	status, 6	;RP1=0, select bank1
  1850  01F2  009B               	movwf	(155)^080h	;volatile
  1851                           	line	54
  1852                           	
  1853  01F3                     l8766:	
  1854                           ;myeeprom.c: 54: RD = 1;
  1855  01F3  141C               	bsf	(1248/8)^080h,(1248)&7
  1856                           	line	55
  1857                           ;myeeprom.c: 55: EepromData = EEDAT;
  1858  01F4  081A               	movf	(154)^080h,w	;volatile
  1859  01F5  00F4               	movwf	(??_Read_EEPROM_u8+0)+0
  1860  01F6  0874               	movf	(??_Read_EEPROM_u8+0)+0,w
  1861  01F7  1283               	bcf	status, 5	;RP0=0, select bank0
  1862  01F8  1303               	bcf	status, 6	;RP1=0, select bank0
  1863  01F9  00A1               	movwf	(Read_EEPROM_u8@EepromData)
  1864                           	line	56
  1865                           	
  1866  01FA                     l8768:	
  1867                           ;myeeprom.c: 56: RD = 0;
  1868  01FA  1683               	bsf	status, 5	;RP0=1, select bank1
  1869  01FB  1303               	bcf	status, 6	;RP1=0, select bank1
  1870  01FC  101C               	bcf	(1248/8)^080h,(1248)&7
  1871                           	line	57
  1872                           ;myeeprom.c: 57: return EepromData;
  1873  01FD  1283               	bcf	status, 5	;RP0=0, select bank0
  1874  01FE  1303               	bcf	status, 6	;RP1=0, select bank0
  1875  01FF  0821               	movf	(Read_EEPROM_u8@EepromData),w
  1876  0200  2A01               	goto	l4361
  1877                           	
  1878  0201                     l8770:	
  1879                           	line	58
  1880                           	
  1881  0201                     l4361:	
  1882  0201  0008               	return
  1883                           	opt stack 0
  1884                           GLOBAL	__end_of_Read_EEPROM_u8
  1885  0202                     	__end_of_Read_EEPROM_u8:
  1886 ;; =============== function _Read_EEPROM_u8 ends ============
  1887                           
  1888                           	signat	_Read_EEPROM_u8,4217
  1889                           	global	_Write_EEPROM_u8
  1890                           psect	text553,local,class=CODE,delta=2
  1891                           global __ptext553
  1892  01AD                     __ptext553:
  1893                           
  1894 ;; *************** function _Write_EEPROM_u8 *****************
  1895 ;; Defined at:
  1896 ;;		line 37 in file "myeeprom.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  EEAddress       1    wreg     unsigned char 
  1899 ;;  EEDatas         1    4[COMMON] unsigned char 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  EEAddress       1    5[COMMON] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;		None               void
  1904 ;; Registers used:
  1905 ;;		wreg
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1
  1911 ;;      Params:         1       0       0
  1912 ;;      Locals:         1       0       0
  1913 ;;      Temps:          0       0       0
  1914 ;;      Totals:         2       0       0
  1915 ;;Total ram usage:        2 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    1
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_EEPROM_Init
  1922 ;;		_Write_EEPROM_u16
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           psect	text553
  1926                           	file	"myeeprom.c"
  1927                           	line	37
  1928                           	global	__size_of_Write_EEPROM_u8
  1929  0021                     	__size_of_Write_EEPROM_u8	equ	__end_of_Write_EEPROM_u8-_Write_EEPROM_u8
  1930                           	
  1931  01AD                     _Write_EEPROM_u8:	
  1932                           	opt	stack 5
  1933                           ; Regs used in _Write_EEPROM_u8: [wreg]
  1934                           ;Write_EEPROM_u8@EEAddress stored from wreg
  1935  01AD  00F5               	movwf	(Write_EEPROM_u8@EEAddress)
  1936                           	line	38
  1937                           	
  1938  01AE                     l8754:	
  1939                           ;myeeprom.c: 38: GIE = 0;
  1940  01AE  138B               	bcf	(95/8),(95)&7
  1941                           	line	39
  1942                           ;myeeprom.c: 39: while(GIE) asm("clrwdt");
  1943  01AF  29B1               	goto	l4352
  1944                           	
  1945  01B0                     l4353:	
  1946                           # 39 "myeeprom.c"
  1947  01B0  0064               clrwdt ;#
  1948                           psect	text553
  1949                           	
  1950  01B1                     l4352:	
  1951  01B1  1B8B               	btfsc	(95/8),(95)&7
  1952  01B2  29B4               	goto	u2511
  1953  01B3  29B5               	goto	u2510
  1954  01B4                     u2511:
  1955  01B4  29B0               	goto	l4353
  1956  01B5                     u2510:
  1957  01B5  29B6               	goto	l8756
  1958                           	
  1959  01B6                     l4354:	
  1960                           	line	40
  1961                           	
  1962  01B6                     l8756:	
  1963                           ;myeeprom.c: 40: EEADR = EEAddress;
  1964  01B6  0875               	movf	(Write_EEPROM_u8@EEAddress),w
  1965  01B7  1683               	bsf	status, 5	;RP0=1, select bank1
  1966  01B8  1303               	bcf	status, 6	;RP1=0, select bank1
  1967  01B9  009B               	movwf	(155)^080h	;volatile
  1968                           	line	41
  1969                           ;myeeprom.c: 41: EEDAT = EEDatas;
  1970  01BA  0874               	movf	(Write_EEPROM_u8@EEDatas),w
  1971  01BB  009A               	movwf	(154)^080h	;volatile
  1972                           	line	42
  1973                           	
  1974  01BC                     l8758:	
  1975                           ;myeeprom.c: 42: EEIF = 0;
  1976  01BC  1283               	bcf	status, 5	;RP0=0, select bank0
  1977  01BD  1303               	bcf	status, 6	;RP1=0, select bank0
  1978  01BE  138C               	bcf	(103/8),(103)&7
  1979                           	line	43
  1980                           ;myeeprom.c: 43: EECON1 = 0x34;
  1981  01BF  3034               	movlw	(034h)
  1982  01C0  1683               	bsf	status, 5	;RP0=1, select bank1
  1983  01C1  1303               	bcf	status, 6	;RP1=0, select bank1
  1984  01C2  009C               	movwf	(156)^080h	;volatile
  1985                           	line	44
  1986                           	
  1987  01C3                     l8760:	
  1988                           ;myeeprom.c: 44: WR = 1;
  1989  01C3  141D               	bsf	(1256/8)^080h,(1256)&7
  1990                           	line	45
  1991                           ;myeeprom.c: 45: while(WR) asm("clrwdt");
  1992  01C4  29C6               	goto	l4355
  1993                           	
  1994  01C5                     l4356:	
  1995                           # 45 "myeeprom.c"
  1996  01C5  0064               clrwdt ;#
  1997                           psect	text553
  1998                           	
  1999  01C6                     l4355:	
  2000  01C6  1683               	bsf	status, 5	;RP0=1, select bank1
  2001  01C7  1303               	bcf	status, 6	;RP1=0, select bank1
  2002  01C8  181D               	btfsc	(1256/8)^080h,(1256)&7
  2003  01C9  29CB               	goto	u2521
  2004  01CA  29CC               	goto	u2520
  2005  01CB                     u2521:
  2006  01CB  29C5               	goto	l4356
  2007  01CC                     u2520:
  2008                           	
  2009  01CC                     l4357:	
  2010                           	line	47
  2011                           ;myeeprom.c: 47: GIE = 1;
  2012  01CC  178B               	bsf	(95/8),(95)&7
  2013                           	line	48
  2014                           	
  2015  01CD                     l4358:	
  2016  01CD  0008               	return
  2017                           	opt stack 0
  2018                           GLOBAL	__end_of_Write_EEPROM_u8
  2019  01CE                     	__end_of_Write_EEPROM_u8:
  2020 ;; =============== function _Write_EEPROM_u8 ends ============
  2021                           
  2022                           	signat	_Write_EEPROM_u8,8312
  2023                           	global	_isKeyPressed
  2024                           psect	text554,local,class=CODE,delta=2
  2025                           global __ptext554
  2026  0244                     __ptext554:
  2027                           
  2028 ;; *************** function _isKeyPressed *****************
  2029 ;; Defined at:
  2030 ;;		line 18 in file "MyKey.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      unsigned char 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1
  2044 ;;      Params:         0       0       0
  2045 ;;      Locals:         0       0       0
  2046 ;;      Temps:          0       0       0
  2047 ;;      Totals:         0       0       0
  2048 ;;Total ram usage:        0 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    1
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_main
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           psect	text554
  2058                           	file	"MyKey.c"
  2059                           	line	18
  2060                           	global	__size_of_isKeyPressed
  2061  000A                     	__size_of_isKeyPressed	equ	__end_of_isKeyPressed-_isKeyPressed
  2062                           	
  2063  0244                     _isKeyPressed:	
  2064                           	opt	stack 6
  2065                           ; Regs used in _isKeyPressed: [wreg+status,2+status,0]
  2066                           	line	19
  2067                           	
  2068  0244                     l8596:	
  2069                           ;MyKey.c: 19: return PA0 ? 0:1;
  2070  0244  1003               	clrc
  2071  0245  1283               	bcf	status, 5	;RP0=0, select bank0
  2072  0246  1303               	bcf	status, 6	;RP1=0, select bank0
  2073  0247  1C05               	btfss	(40/8),(40)&7
  2074  0248  1403               	setc
  2075  0249  3000               	movlw	0
  2076  024A  1803               	skipnc
  2077  024B  3001               	movlw	1
  2078                           
  2079  024C  2A4D               	goto	l5426
  2080                           	
  2081  024D                     l8598:	
  2082                           	line	20
  2083                           	
  2084  024D                     l5426:	
  2085  024D  0008               	return
  2086                           	opt stack 0
  2087                           GLOBAL	__end_of_isKeyPressed
  2088  024E                     	__end_of_isKeyPressed:
  2089 ;; =============== function _isKeyPressed ends ============
  2090                           
  2091                           	signat	_isKeyPressed,89
  2092                           	global	_GetADCValue
  2093                           psect	text555,local,class=CODE,delta=2
  2094                           global __ptext555
  2095  013D                     __ptext555:
  2096                           
  2097 ;; *************** function _GetADCValue *****************
  2098 ;; Defined at:
  2099 ;;		line 45 in file "myadc.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  ADC_num         2    2[BANK0 ] unsigned int 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2    4[COMMON] unsigned int 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1
  2113 ;;      Params:         2       0       0
  2114 ;;      Locals:         0       2       0
  2115 ;;      Temps:          0       2       0
  2116 ;;      Totals:         2       4       0
  2117 ;;Total ram usage:        6 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    1
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           psect	text555
  2127                           	file	"myadc.c"
  2128                           	line	45
  2129                           	global	__size_of_GetADCValue
  2130  0029                     	__size_of_GetADCValue	equ	__end_of_GetADCValue-_GetADCValue
  2131                           	
  2132  013D                     _GetADCValue:	
  2133                           	opt	stack 6
  2134                           ; Regs used in _GetADCValue: [wreg+status,2+status,0]
  2135                           	line	46
  2136                           	
  2137  013D                     l8742:	
  2138                           ;myadc.c: 46: unsigned int ADC_num=0;
  2139  013D  1283               	bcf	status, 5	;RP0=0, select bank0
  2140  013E  1303               	bcf	status, 6	;RP1=0, select bank0
  2141  013F  01A2               	clrf	(GetADCValue@ADC_num)
  2142  0140  01A3               	clrf	(GetADCValue@ADC_num+1)
  2143                           	line	48
  2144                           	
  2145  0141                     l8744:	
  2146                           ;myadc.c: 48: if(GO_DONE==0) {
  2147  0141  189F               	btfsc	(249/8),(249)&7
  2148  0142  2944               	goto	u2501
  2149  0143  2945               	goto	u2500
  2150  0144                     u2501:
  2151  0144  295E               	goto	l8750
  2152  0145                     u2500:
  2153                           	line	49
  2154                           	
  2155  0145                     l8746:	
  2156                           ;myadc.c: 49: ADC_num=ADRESH;
  2157  0145  081E               	movf	(30),w	;volatile
  2158  0146  00A0               	movwf	(??_GetADCValue+0)+0
  2159  0147  01A1               	clrf	(??_GetADCValue+0)+0+1
  2160  0148  0820               	movf	0+(??_GetADCValue+0)+0,w
  2161  0149  00A2               	movwf	(GetADCValue@ADC_num)
  2162  014A  0821               	movf	1+(??_GetADCValue+0)+0,w
  2163  014B  00A3               	movwf	(GetADCValue@ADC_num+1)
  2164                           	line	50
  2165                           ;myadc.c: 50: ADC_num=ADC_num<<8;
  2166  014C  0822               	movf	(GetADCValue@ADC_num),w
  2167  014D  00A1               	movwf	(??_GetADCValue+0)+0+1
  2168  014E  01A0               	clrf	(??_GetADCValue+0)+0
  2169  014F  0820               	movf	0+(??_GetADCValue+0)+0,w
  2170  0150  00A2               	movwf	(GetADCValue@ADC_num)
  2171  0151  0821               	movf	1+(??_GetADCValue+0)+0,w
  2172  0152  00A3               	movwf	(GetADCValue@ADC_num+1)
  2173                           	line	51
  2174                           ;myadc.c: 51: ADC_num=ADC_num|ADRESL;
  2175  0153  0822               	movf	(GetADCValue@ADC_num),w
  2176  0154  1683               	bsf	status, 5	;RP0=1, select bank1
  2177  0155  1303               	bcf	status, 6	;RP1=0, select bank1
  2178  0156  041E               	iorwf	(158)^080h,w	;volatile
  2179  0157  1283               	bcf	status, 5	;RP0=0, select bank0
  2180  0158  1303               	bcf	status, 6	;RP1=0, select bank0
  2181  0159  00A2               	movwf	(GetADCValue@ADC_num)
  2182  015A  0823               	movf	(GetADCValue@ADC_num+1),w
  2183  015B  00A3               	movwf	1+(GetADCValue@ADC_num)
  2184                           	line	52
  2185                           	
  2186  015C                     l8748:	
  2187                           ;myadc.c: 52: GO_DONE=1;
  2188  015C  149F               	bsf	(249/8),(249)&7
  2189  015D  295E               	goto	l8750
  2190                           	line	53
  2191                           	
  2192  015E                     l2185:	
  2193                           	line	54
  2194                           	
  2195  015E                     l8750:	
  2196                           ;myadc.c: 53: }
  2197                           ;myadc.c: 54: return ADC_num;
  2198  015E  0823               	movf	(GetADCValue@ADC_num+1),w
  2199  015F  01F5               	clrf	(?_GetADCValue+1)
  2200  0160  07F5               	addwf	(?_GetADCValue+1)
  2201  0161  0822               	movf	(GetADCValue@ADC_num),w
  2202  0162  01F4               	clrf	(?_GetADCValue)
  2203  0163  07F4               	addwf	(?_GetADCValue)
  2204                           
  2205  0164  2965               	goto	l2186
  2206                           	
  2207  0165                     l8752:	
  2208                           	line	55
  2209                           	
  2210  0165                     l2186:	
  2211  0165  0008               	return
  2212                           	opt stack 0
  2213                           GLOBAL	__end_of_GetADCValue
  2214  0166                     	__end_of_GetADCValue:
  2215 ;; =============== function _GetADCValue ends ============
  2216                           
  2217                           	signat	_GetADCValue,90
  2218                           	global	_GPIO_Init
  2219                           psect	text556,local,class=CODE,delta=2
  2220                           global __ptext556
  2221  00B1                     __ptext556:
  2222                           
  2223 ;; *************** function _GPIO_Init *****************
  2224 ;; Defined at:
  2225 ;;		line 34 in file "myconfiguration.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;		None               void
  2232 ;; Registers used:
  2233 ;;		None
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMMON   BANK0   BANK1
  2239 ;;      Params:         0       0       0
  2240 ;;      Locals:         0       0       0
  2241 ;;      Temps:          0       0       0
  2242 ;;      Totals:         0       0       0
  2243 ;;Total ram usage:        0 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    1
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_main
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           psect	text556
  2253                           	file	"myconfiguration.c"
  2254                           	line	34
  2255                           	global	__size_of_GPIO_Init
  2256  0032                     	__size_of_GPIO_Init	equ	__end_of_GPIO_Init-_GPIO_Init
  2257                           	
  2258  00B1                     _GPIO_Init:	
  2259                           	opt	stack 6
  2260                           ; Regs used in _GPIO_Init: []
  2261                           	line	36
  2262                           	
  2263  00B1                     l8582:	
  2264                           ;myconfiguration.c: 36: TRISA0=1;
  2265  00B1  1683               	bsf	status, 5	;RP0=1, select bank1
  2266  00B2  1303               	bcf	status, 6	;RP1=0, select bank1
  2267  00B3  1405               	bsf	(1064/8)^080h,(1064)&7
  2268                           	line	37
  2269                           ;myconfiguration.c: 37: TRISA1=0;
  2270  00B4  1085               	bcf	(1065/8)^080h,(1065)&7
  2271                           	line	38
  2272                           ;myconfiguration.c: 38: TRISA2=0;
  2273  00B5  1105               	bcf	(1066/8)^080h,(1066)&7
  2274                           	line	39
  2275                           ;myconfiguration.c: 39: TRISA3=0;
  2276  00B6  1185               	bcf	(1067/8)^080h,(1067)&7
  2277                           	line	40
  2278                           ;myconfiguration.c: 40: TRISA4=0;
  2279  00B7  1205               	bcf	(1068/8)^080h,(1068)&7
  2280                           	line	41
  2281                           ;myconfiguration.c: 41: TRISA5=0;
  2282  00B8  1285               	bcf	(1069/8)^080h,(1069)&7
  2283                           	line	42
  2284                           ;myconfiguration.c: 42: TRISA6=0;
  2285  00B9  1305               	bcf	(1070/8)^080h,(1070)&7
  2286                           	line	43
  2287                           ;myconfiguration.c: 43: TRISA7=0;
  2288  00BA  1385               	bcf	(1071/8)^080h,(1071)&7
  2289                           	line	45
  2290                           ;myconfiguration.c: 45: TRISC0=0;
  2291  00BB  1007               	bcf	(1080/8)^080h,(1080)&7
  2292                           	line	46
  2293                           ;myconfiguration.c: 46: TRISC1=0;
  2294  00BC  1087               	bcf	(1081/8)^080h,(1081)&7
  2295                           	line	47
  2296                           ;myconfiguration.c: 47: TRISC2=0;
  2297  00BD  1107               	bcf	(1082/8)^080h,(1082)&7
  2298                           	line	48
  2299                           ;myconfiguration.c: 48: TRISC3=0;
  2300  00BE  1187               	bcf	(1083/8)^080h,(1083)&7
  2301                           	line	49
  2302                           ;myconfiguration.c: 49: TRISC4=0;
  2303  00BF  1207               	bcf	(1084/8)^080h,(1084)&7
  2304                           	line	50
  2305                           ;myconfiguration.c: 50: TRISC5=0;
  2306  00C0  1287               	bcf	(1085/8)^080h,(1085)&7
  2307                           	line	52
  2308                           ;myconfiguration.c: 52: CM0=1;
  2309  00C1  1283               	bcf	status, 5	;RP0=0, select bank0
  2310  00C2  1303               	bcf	status, 6	;RP1=0, select bank0
  2311  00C3  1419               	bsf	(200/8),(200)&7
  2312                           	line	53
  2313                           ;myconfiguration.c: 53: CM1=1;
  2314  00C4  1499               	bsf	(201/8),(201)&7
  2315                           	line	54
  2316                           ;myconfiguration.c: 54: CM2=1;
  2317  00C5  1519               	bsf	(202/8),(202)&7
  2318                           	line	58
  2319                           ;myconfiguration.c: 58: ANSEL0=0;
  2320  00C6  1683               	bsf	status, 5	;RP0=1, select bank1
  2321  00C7  1303               	bcf	status, 6	;RP1=0, select bank1
  2322  00C8  1011               	bcf	(1160/8)^080h,(1160)&7
  2323                           	line	59
  2324                           ;myconfiguration.c: 59: ANSEL1=0;
  2325  00C9  1091               	bcf	(1161/8)^080h,(1161)&7
  2326                           	line	60
  2327                           ;myconfiguration.c: 60: ANSEL2=0;
  2328  00CA  1111               	bcf	(1162/8)^080h,(1162)&7
  2329                           	line	61
  2330                           ;myconfiguration.c: 61: ANSEL3=0;
  2331  00CB  1191               	bcf	(1163/8)^080h,(1163)&7
  2332                           	line	62
  2333                           ;myconfiguration.c: 62: ANSEL4=0;
  2334  00CC  1211               	bcf	(1164/8)^080h,(1164)&7
  2335                           	line	63
  2336                           ;myconfiguration.c: 63: ANSEL5=0;
  2337  00CD  1291               	bcf	(1165/8)^080h,(1165)&7
  2338                           	line	64
  2339                           ;myconfiguration.c: 64: ANSEL6=0;
  2340  00CE  1311               	bcf	(1166/8)^080h,(1166)&7
  2341                           	line	65
  2342                           ;myconfiguration.c: 65: ANSEL7=0;
  2343  00CF  1391               	bcf	(1167/8)^080h,(1167)&7
  2344                           	line	67
  2345                           ;myconfiguration.c: 67: WPUA0=1;
  2346  00D0  1415               	bsf	(1192/8)^080h,(1192)&7
  2347                           	line	68
  2348                           ;myconfiguration.c: 68: WPUA1=1;
  2349  00D1  1495               	bsf	(1193/8)^080h,(1193)&7
  2350                           	line	69
  2351                           ;myconfiguration.c: 69: WPUA2=1;
  2352  00D2  1515               	bsf	(1194/8)^080h,(1194)&7
  2353                           	line	70
  2354                           ;myconfiguration.c: 70: WPUA3=1;
  2355  00D3  1595               	bsf	(1195/8)^080h,(1195)&7
  2356                           	line	71
  2357                           ;myconfiguration.c: 71: WPUA4=1;
  2358  00D4  1615               	bsf	(1196/8)^080h,(1196)&7
  2359                           	line	72
  2360                           ;myconfiguration.c: 72: WPUA5=1;
  2361  00D5  1695               	bsf	(1197/8)^080h,(1197)&7
  2362                           	line	73
  2363                           ;myconfiguration.c: 73: WPUA6=1;
  2364  00D6  1715               	bsf	(1198/8)^080h,(1198)&7
  2365                           	line	74
  2366                           ;myconfiguration.c: 74: WPUA7=1;
  2367  00D7  1795               	bsf	(1199/8)^080h,(1199)&7
  2368                           	line	76
  2369                           ;myconfiguration.c: 76: WPUC0=0;
  2370  00D8  1008               	bcf	(1088/8)^080h,(1088)&7
  2371                           	line	77
  2372                           ;myconfiguration.c: 77: WPUC1=0;
  2373  00D9  1088               	bcf	(1089/8)^080h,(1089)&7
  2374                           	line	78
  2375                           ;myconfiguration.c: 78: WPUC2=0;
  2376  00DA  1108               	bcf	(1090/8)^080h,(1090)&7
  2377                           	line	79
  2378                           ;myconfiguration.c: 79: WPUC3=0;
  2379  00DB  1188               	bcf	(1091/8)^080h,(1091)&7
  2380                           	line	80
  2381                           ;myconfiguration.c: 80: WPUC4=0;
  2382  00DC  1208               	bcf	(1092/8)^080h,(1092)&7
  2383                           	line	81
  2384                           ;myconfiguration.c: 81: WPUC5=0;
  2385  00DD  1288               	bcf	(1093/8)^080h,(1093)&7
  2386                           	line	83
  2387                           ;myconfiguration.c: 83: WPDA4=0;
  2388  00DE  1209               	bcf	(1100/8)^080h,(1100)&7
  2389                           	line	84
  2390                           ;myconfiguration.c: 84: WPDC1=0;
  2391  00DF  1189               	bcf	(1099/8)^080h,(1099)&7
  2392                           	line	85
  2393                           ;myconfiguration.c: 85: WPDC2=0;
  2394  00E0  1109               	bcf	(1098/8)^080h,(1098)&7
  2395                           	line	86
  2396                           ;myconfiguration.c: 86: WPDC3=0;
  2397  00E1  1089               	bcf	(1097/8)^080h,(1097)&7
  2398                           	line	87
  2399                           	
  2400  00E2                     l3259:	
  2401  00E2  0008               	return
  2402                           	opt stack 0
  2403                           GLOBAL	__end_of_GPIO_Init
  2404  00E3                     	__end_of_GPIO_Init:
  2405 ;; =============== function _GPIO_Init ends ============
  2406                           
  2407                           	signat	_GPIO_Init,88
  2408                           	global	_System_init
  2409                           psect	text557,local,class=CODE,delta=2
  2410                           global __ptext557
  2411  024E                     __ptext557:
  2412                           
  2413 ;; *************** function _System_init *****************
  2414 ;; Defined at:
  2415 ;;		line 21 in file "myconfiguration.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;		None               void
  2422 ;; Registers used:
  2423 ;;		wreg, status,2
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1
  2429 ;;      Params:         0       0       0
  2430 ;;      Locals:         0       0       0
  2431 ;;      Temps:          0       0       0
  2432 ;;      Totals:         0       0       0
  2433 ;;Total ram usage:        0 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    1
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           psect	text557
  2443                           	file	"myconfiguration.c"
  2444                           	line	21
  2445                           	global	__size_of_System_init
  2446  000A                     	__size_of_System_init	equ	__end_of_System_init-_System_init
  2447                           	
  2448  024E                     _System_init:	
  2449                           	opt	stack 6
  2450                           ; Regs used in _System_init: [wreg+status,2]
  2451                           	line	22
  2452                           	
  2453  024E                     l8576:	
  2454                           ;myconfiguration.c: 22: OPTION = 0x00;
  2455  024E  1683               	bsf	status, 5	;RP0=1, select bank1
  2456  024F  1303               	bcf	status, 6	;RP1=0, select bank1
  2457  0250  0181               	clrf	(129)^080h	;volatile
  2458                           	line	23
  2459                           	
  2460  0251                     l8578:	
  2461                           ;myconfiguration.c: 23: OSCCON = 0x70;
  2462  0251  3070               	movlw	(070h)
  2463  0252  008F               	movwf	(143)^080h	;volatile
  2464                           	line	24
  2465                           	
  2466  0253                     l8580:	
  2467                           ;myconfiguration.c: 24: WDTCON = 0x1E;
  2468  0253  301E               	movlw	(01Eh)
  2469  0254  1283               	bcf	status, 5	;RP0=0, select bank0
  2470  0255  1303               	bcf	status, 6	;RP1=0, select bank0
  2471  0256  0098               	movwf	(24)	;volatile
  2472                           	line	25
  2473                           	
  2474  0257                     l3256:	
  2475  0257  0008               	return
  2476                           	opt stack 0
  2477                           GLOBAL	__end_of_System_init
  2478  0258                     	__end_of_System_init:
  2479 ;; =============== function _System_init ends ============
  2480                           
  2481                           	signat	_System_init,88
  2482                           	global	_ISR
  2483                           psect	text558,local,class=CODE,delta=2
  2484                           global __ptext558
  2485  0202                     __ptext558:
  2486                           
  2487 ;; *************** function _ISR *****************
  2488 ;; Defined at:
  2489 ;;		line 19 in file "mytimmer.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;		None               void
  2496 ;; Registers used:
  2497 ;;		None
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1
  2503 ;;      Params:         0       0       0
  2504 ;;      Locals:         0       0       0
  2505 ;;      Temps:          4       0       0
  2506 ;;      Totals:         4       0       0
  2507 ;;Total ram usage:        4 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		Interrupt level 1
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           psect	text558
  2516                           	file	"mytimmer.c"
  2517                           	line	19
  2518                           	global	__size_of_ISR
  2519  0014                     	__size_of_ISR	equ	__end_of_ISR-_ISR
  2520                           	
  2521  0202                     _ISR:	
  2522                           	opt	stack 5
  2523                           ; Regs used in _ISR: []
  2524                           psect	intentry,class=CODE,delta=2
  2525                           global __pintentry
  2526  0004                     __pintentry:
  2527                           global interrupt_function
  2528  0004                     interrupt_function:
  2529                           	global saved_w
  2530  007E                     	saved_w	set	btemp+0
  2531  0004  00FE               	movwf	saved_w
  2532  0005  0E03               	swapf	status,w
  2533  0006  00F0               	movwf	(??_ISR+0)
  2534  0007  0804               	movf	fsr0,w
  2535  0008  00F1               	movwf	(??_ISR+1)
  2536  0009  080A               	movf	pclath,w
  2537  000A  00F2               	movwf	(??_ISR+2)
  2538  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  2539  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  2540  000D  087F               	movf	btemp+1,w
  2541  000E  00F3               	movwf	(??_ISR+3)
  2542  000F  2A02               	ljmp	_ISR
  2543                           psect	text558
  2544                           	line	20
  2545                           	
  2546  0202                     i1l7574:	
  2547                           ;mytimmer.c: 20: if(TMR2IE&&TMR2IF) {
  2548  0202  1683               	bsf	status, 5	;RP0=1, select bank1
  2549  0203  1303               	bcf	status, 6	;RP1=0, select bank1
  2550  0204  1C8C               	btfss	(1121/8)^080h,(1121)&7
  2551  0205  2A07               	goto	u5_21
  2552  0206  2A08               	goto	u5_20
  2553  0207                     u5_21:
  2554  0207  2A09               	goto	i1l6492
  2555  0208                     u5_20:
  2556                           	
  2557  0208                     i1l7576:	
  2558  0208  2A09               	goto	i1l6492
  2559                           	line	21
  2560                           	
  2561  0209                     i1l6491:	
  2562                           	line	22
  2563                           	
  2564  0209                     i1l6492:	
  2565  0209  0873               	movf	(??_ISR+3),w
  2566  020A  1283               	bcf	status, 5	;RP0=0, select bank0
  2567  020B  1303               	bcf	status, 6	;RP1=0, select bank0
  2568  020C  00FF               	movwf	btemp+1
  2569  020D  0872               	movf	(??_ISR+2),w
  2570  020E  008A               	movwf	pclath
  2571  020F  0871               	movf	(??_ISR+1),w
  2572  0210  0084               	movwf	fsr0
  2573  0211  0E70               	swapf	(??_ISR+0)^0FFFFFF80h,w
  2574  0212  0083               	movwf	status
  2575  0213  0EFE               	swapf	saved_w,f
  2576  0214  0E7E               	swapf	saved_w,w
  2577  0215  0009               	retfie
  2578                           	opt stack 0
  2579                           GLOBAL	__end_of_ISR
  2580  0216                     	__end_of_ISR:
  2581 ;; =============== function _ISR ends ============
  2582                           
  2583                           	signat	_ISR,88
  2584                           psect	text559,local,class=CODE,delta=2
  2585                           global __ptext559
  2586  0000                     __ptext559:
  2587                           	global	btemp
  2588  007E                     	btemp set 07Eh
  2589                           
  2590                           	DABS	1,126,2	;btemp
  2591                           	global	wtemp0
  2592  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Mar 22 18:25:32 2019

                        _i 0078                          _j 0079                         _RD 04E0  
                       _WR 04E8              ??_ExchChannel 0074                        _CM0 00C8  
                      _CM1 00C9                        _CM2 00CA                        _PA0 0028  
                      _GIE 005F                        _PC2 003A                        _PA6 002E  
                      _PR2 0092                        _ISR 0202                        _SR0 0CF6  
                      _SR1 0CF7                        fsr0 0004     __size_of_LED_Study_End 0031  
                     ?_ISR 0070                       l1100 004C                       l1101 0057  
                     l1110 00B0                       l1102 006B  __size_of_Write_EEPROM_u16 0013  
                     l1103 0092                       l1104 009F                       l1105 00AE  
                     l1106 00AB                       l1107 00AD                       l1108 00AF  
                     l1109 00B0                       l1097 002C                       l1098 002D  
                     l1099 0038                       l2182 01EA                       l2185 015E  
                     l2186 0165                       l2189 018A                       l3262 01A1  
                     l3263 0190                       l3256 0257                       l3264 01AC  
                     l3265 01AC                       l3274 0113                       l3259 00E2  
                     l4343 0239                       l4352 01B1                       l4353 01B0  
                     l4361 0201                       l4354 01B6                       l4346 0228  
                     l4355 01C6                       l4356 01C5                       l4357 01CC  
                     l4349 013C                       l4358 01CD                       l5426 024D  
                     _ADFM 00FF                       l8800 01CE                       l8810 01DF  
                     l8802 01D8                       l8580 0253                       l8812 01E0  
                     l8804 01DC                       l8820 00E3                       _ADON 00F8  
                     l8582 00B1                       l8750 015E                       l8742 013D  
                     l8814 01E1                       l8806 01DD                       l8830 0103  
                     l8822 00E6                       l8576 024E                       l8752 0165  
                     l8744 0141                       l8760 01C3                       l8816 01E2  
                     l8808 01DE                       l8832 010B                       l8824 00EB  
                     l8840 0014                       l8578 0251                       l8746 0145  
                     l8754 01AE                       l8770 0201                       l8762 01EE  
                     l8818 01E7                       l8826 00F3                       l8850 002F  
                     l8842 0015                       l8834 0011                       l8748 015C  
                     l8596 0244                       l8756 01B6                       l8764 01EF  
                     l8772 0229                       l8780 012A                       l8828 00FB  
                     l8860 0045                       l8852 0030                       l8844 0016  
                     l8836 0012                       l8598 024D                       l8758 01BC  
                     l8766 01F3                       l8782 0135                       l8774 0117  
                     l8790 017A                       l8870 0057                       l8854 0037  
                     l8862 004C                       l8846 0027                       l8838 0013  
                     _CHS0 00FA                       _CHS1 00FB                       l8768 01FA  
                     l8784 013C                       l8776 0119                       l8792 0187  
                     l8880 0079                       l8872 0060                       l8864 004E  
                     l8856 0038                       l8848 002D                       _CHS2 00FC  
                     l8778 0123                       l8786 0169                       l8794 018B  
                     l8890 009D                       l8882 0081                       l8874 0064  
                     l8866 004F                       l8858 0041                       l8788 016D  
                     l8796 0190                       l8892 009F                       l8884 0089  
                     l8868 0056                       l8876 006B                       _EEIF 0067  
                     l8798 0219                       l8894 00A9                       l8886 008E  
                     l8878 0076                       l8888 0092                       _DIVS 04FF  
                     u2500 0145                       u2501 0144                       u2510 01B5  
                     u2511 01B4                       u2520 01CC                       u2600 0076  
                     u2521 01CB                       u2601 0075                       u2610 009D  
                     u2611 009C                       u2540 01AB                       u2620 00A9  
                     u2541 01AA                       u2621 00A8                       u2550 0027  
                     u2535 0170                       u2551 0026                       u2560 0036  
                     u2545 01A7                       u2625 00A5                       u2561 0035  
                     u2570 004B                       u2571 004A                       u2580 0055  
                     u2637 0194                       u2581 0054                       u2590 006A  
                     u2647 0182                       u2591 0069                       _PEIE 005E  
                     _TMR2 0011                       _STRA 0CE8                       _STRB 0CE9  
                     _STRC 0CEA                       _STRD 0CEB                       _WREN 0C62  
           ??_isKeyPressed 0074                       u5_20 0208                       u5_21 0207  
                     _main 0011                       btemp 007E           __end_of_ADC_Init 01EB  
              _GetADCValue 013D                       start 0010         __size_of_GPIO_Init 0032  
           _Read_EEPROM_u8 01EB       __size_of_System_init 000A                      ??_ISR 0070  
Read_EEPROM_u16@EepromData 0027                      _C1SEN 0CF5                      _C2REN 0CF4  
                    _ADCS0 04FC                      _ADCS1 04FD                      _ADCS2 04FE  
                    ?_main 0070                      _EEADR 009B                      _EEDAT 009A  
                    _CARRY 0018                      _EEPGD 0C67                      _VCFG0 00FD  
                    _WPDA4 044C                      _WPDC1 044B                      _WPDC2 044A  
                    _SRCON 019E                      _WPDC3 0449                      _PULSR 0CF2  
                    _PULSS 0CF3                      _WPUA0 04A8                      _WPUA1 04A9  
                    _WPUA2 04AA                      _WPUA3 04AB                      _WPUC0 0440  
                    _WPUA4 04AC                      _WPUC1 0441                      _WPUA5 04AD  
                    _WPUC2 0442                      _WPUA6 04AE                      _WPUC3 0443  
                    _WPUA7 04AF                      _WPUC4 0444                      _WPUC5 0445  
      __end_of_ExchChannel 018B                      pclath 000A                      status 0003  
 Read_EEPROM_u16@EEAddress 0026                      wtemp0 007E     __end_of_Read_EEPROM_u8 0202  
          _Read_EEPROM_u16 0114       __size_of_EEPROM_Init 0011              _LED_Study_End 00E3  
             __end_of_main 00B1                     ??_main 0029          __end_of_GPIO_Init 00E3  
                   _ADCON0 001F                     _ADRESH 001E                     _ADRESL 009E  
                   _EEDATA 009A                     _EECON1 009C                     _EECON2 009D  
                   _ANSEL0 0488                     _ANSEL1 0489                     _ANSEL2 048A  
                   _ANSEL3 048B                     _ANSEL4 048C                     _ANSEL5 048D  
                   _ANSEL6 048E                     _ANSEL7 048F                     i1l6491 0209  
                   i1l6492 0209                     i1l7574 0202                     i1l7576 0208  
                   _OSCCON 008F                     _TMR2IE 0461                     _TMR2IF 0061  
                   _OPTION 0081                     _TMR2ON 0092                     _WDTCON 0018  
                   _TRISA0 0428                     _TRISA1 0429                     _TRISA2 042A  
                   _TRISA3 042B                     _TRISC0 0438                     _TRISA4 042C  
                   _TRISC1 0439                     _TRISA5 042D                     _TRISC2 043A  
                   _TRISA6 042E                     _TRISC3 043B                     _TRISA7 042F  
                   _TRISC4 043C                     _TRISC5 043D            ?_Read_EEPROM_u8 0070  
         __end_of_delay_ms 01AD             ?_LED_Study_End 0070     Write_EEPROM_u8@EEDatas 0074  
     __end_of_isKeyPressed 024E                _ExchChannel 0166   __size_of_Write_EEPROM_u8 0021  
                ?_ADC_Init 0070                     saved_w 007E           _Write_EEPROM_u16 0216  
  __end_of_Read_EEPROM_u16 013D             __pcstackCOMMON 0070                 ??_ADC_Init 0076  
  Write_EEPROM_u16@EEDatas 0020     ExchChannel@adc_ch_temp 0021    Read_EEPROM_u8@EEAddress 0020  
               __pbssBANK0 002A            ??_LED_Study_End 0076               ?_GetADCValue 0074  
               __pmaintext 0011                 __pintentry 0004                    _T2CKPS0 0090  
                  _T2CKPS1 0091                    _GO_DONE 00F9                  ?_delay_ms 0074  
                  _PSTRCON 019D                    _TOUTPS0 0093                    _TOUTPS1 0094  
                  _TOUTPS2 0095                    _TOUTPS3 0096                    _STRSYNC 0CEC  
        ??_Write_EEPROM_u8 0075           ?_Read_EEPROM_u16 0022                  _ADC_STUDY 0076  
            ??_System_init 0074      __size_of_isKeyPressed 000A               __size_of_ISR 0014  
               ??_delay_ms 0020           ??_Read_EEPROM_u8 0074                  _GPIO_Init 00B1  
     end_of_initialization 0242              ??_EEPROM_Init 0020               _isKeyPressed 0244  
              _ADC5_ADCOUT 002C   __end_of_Write_EEPROM_u16 0229        __end_of_System_init 0258  
             ?_ExchChannel 0070          __size_of_ADC_Init 001D                 ?_GPIO_Init 0070  
       GetADCValue@ADC_num 0022       __size_of_GetADCValue 0029        __end_of_EEPROM_Init 023A  
      start_initialization 023A                __end_of_ISR 0216                _System_init 024E  
          _Write_EEPROM_u8 01AD                __pbssCOMMON 0076              __pcstackBANK0 0020  
              ??_GPIO_Init 0074          __size_of_delay_ms 0022         ExchChannel@ch_temp 0020  
              _EEPROM_Init 0229      __end_of_LED_Study_End 0114                  __ptext550 0114  
                __ptext551 0229                  __ptext552 01EB                  __ptext544 0000  
                __ptext553 01AD                  __ptext545 00E3                  __ptext554 0244  
                __ptext546 01CE                  __ptext555 013D                  __ptext547 0216  
                __ptext556 00B1                  __ptext548 018B                  __ptext557 024E  
                __ptext549 0166                  __ptext558 0202                  __ptext559 0000  
     __size_of_ExchChannel 0025                   _ADC_Init 01CE          interrupt_function 0004  
                delay_ms@i 0022                  delay_ms@x 0074                 _ADC1_INPUT 002A  
 __size_of_Read_EEPROM_u16 0029    __end_of_Write_EEPROM_u8 01CE          ?_Write_EEPROM_u16 0020  
       ??_Write_EEPROM_u16 0022  Write_EEPROM_u16@EEAddress 0023   Write_EEPROM_u8@EEAddress 0075  
                 _delay_ms 018B   Read_EEPROM_u8@EepromData 0021              __size_of_main 00A0  
            ??_GetADCValue 0020               ?_System_init 0070    __size_of_Read_EEPROM_u8 0017  
         ?_Write_EEPROM_u8 0074          ??_Read_EEPROM_u16 0024                   intlevel1 0000  
             ?_EEPROM_Init 0070        __end_of_GetADCValue 0166              ?_isKeyPressed 0070  
